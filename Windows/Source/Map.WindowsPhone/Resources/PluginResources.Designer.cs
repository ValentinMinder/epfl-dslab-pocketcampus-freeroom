//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PocketCampus.Map.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PluginResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PluginResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PocketCampus.Map.Resources.PluginResources", typeof(PluginResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to campus.
        /// </summary>
        public static string CenterOnCampusButton {
            get {
                return ResourceManager.GetString("CenterOnCampusButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to my position.
        /// </summary>
        public static string CenterOnPositionButton {
            get {
                return ResourceManager.GetString("CenterOnPositionButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Geolocation error..
        /// </summary>
        public static string LocationError {
            get {
                return ResourceManager.GetString("LocationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        public static string MainViewTitle {
            get {
                return ResourceManager.GetString("MainViewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MAP.
        /// </summary>
        public static string PagesHeader {
            get {
                return ResourceManager.GetString("PagesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        public static string PluginName {
            get {
                return ResourceManager.GetString("PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during the search. Please try again later..
        /// </summary>
        public static string SearchError {
            get {
                return ResourceManager.GetString("SearchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching....
        /// </summary>
        public static string Searching {
            get {
                return ResourceManager.GetString("Searching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during the search. Please check your Internet connection..
        /// </summary>
        public static string SearchNetworkError {
            get {
                return ResourceManager.GetString("SearchNetworkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No results were found. Please check your spelling, or try a less restrictive search..
        /// </summary>
        public static string SearchNoResults {
            get {
                return ResourceManager.GetString("SearchNoResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to settings.
        /// </summary>
        public static string SettingsButton {
            get {
                return ResourceManager.GetString("SettingsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to settings.
        /// </summary>
        public static string SettingsViewTitle {
            get {
                return ResourceManager.GetString("SettingsViewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show my position on the map.
        /// </summary>
        public static string UseGeolocation {
            get {
                return ResourceManager.GetString("UseGeolocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Geolocation.
        /// </summary>
        public static string UseGeolocationCaption {
            get {
                return ResourceManager.GetString("UseGeolocationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to show your position on the map?
        ///To do so, the app must access your position continuously..
        /// </summary>
        public static string UseGeolocationMessage {
            get {
                return ResourceManager.GetString("UseGeolocationMessage", resourceCulture);
            }
        }
    }
}
