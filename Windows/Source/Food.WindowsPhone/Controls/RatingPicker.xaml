<!-- Copyright (c) PocketCampus.Org 2014
     See LICENSE file for more details
     File author: Solal Pirelli -->

<comControls:ObservableControl x:Class="PocketCampus.Food.Controls.RatingPicker"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:comControls="clr-namespace:PocketCampus.Common.Controls;assembly=PocketCampus.Common.WindowsPhone"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               mc:Ignorable="d"
                               d:DesignHeight="100" d:DesignWidth="480">
    <!-- Control resources -->
    <comControls:ObservableControl.Resources>
        <!-- RadioButton template that consists of text only, which becomes colored if the button is selected -->
        <ControlTemplate x:Key="TextRadioButtonTemplate" TargetType="RadioButton">
            <Grid Background="Transparent">
                <TextBlock x:Name="Text"
                           Text="{TemplateBinding Content}"
                           TextOptions.DisplayColorEmoji="False"
                           Style="{StaticResource PhoneTextTitle1Style}"
                           Foreground="{StaticResource PhoneSubtleBrush}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckedStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text"
                                                               Storyboard.TargetProperty="Foreground"
                                                               Duration="00:00:00.3">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppAccentBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text"
                                                               Storyboard.TargetProperty="Foreground"
                                                               Duration="00:00:00.3">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneSubtleBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
    </comControls:ObservableControl.Resources>

    <!-- Main grid -->
    <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!-- "Bad" button -->
        <RadioButton IsChecked="{Binding IsBad, Mode=TwoWay}"
                     Content="ðŸ˜’"
                     Template="{StaticResource TextRadioButtonTemplate}" />

        <!-- "Neutral" button -->
        <RadioButton Grid.Column="1"
                     IsChecked="{Binding IsNeutral, Mode=TwoWay}"
                     Content="ðŸ˜‘"
                     Template="{StaticResource TextRadioButtonTemplate}" />

        <!-- "Good" button -->
        <RadioButton Grid.Column="2"
                     IsChecked="{Binding IsGood, Mode=TwoWay}"
                     Content="ðŸ˜ƒ"
                     Template="{StaticResource TextRadioButtonTemplate}" />
    </Grid>
</comControls:ObservableControl>