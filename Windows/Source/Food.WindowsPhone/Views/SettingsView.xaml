<!-- Copyright (c) PocketCampus.Org 2014
     See LICENSE file for more details
     File author: Solal Pirelli -->

<comControls:BasePage x:Class="PocketCampus.Food.Views.SettingsView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:tool="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
                      xmlns:comControls="clr-namespace:PocketCampus.Common.Controls;assembly=PocketCampus.Common.WindowsPhone"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      mc:Ignorable="d">
    <!-- Design-time DataContext -->
    <d:DesignProperties.DataContext>
        <design:DesignSettingsViewModel xmlns:design="clr-namespace:PocketCampus.Food.ViewModels.Design;assembly=PocketCampus.Food.Common" />
    </d:DesignProperties.DataContext>

    <!-- Page resources -->
    <comControls:BasePage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Price target template for the ComboBox -->
            <DataTemplate x:Key="PriceTargetTemplate">
                <TextBlock Text="{Binding Converter={StaticResource EnumToString}}" />
            </DataTemplate>

            <!-- Items panel that wraps its elements if they overflow -->
            <ItemsPanelTemplate x:Key="WrapItemsPanel">
                <tool:WrapPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>

            <!-- Simple ToggleButton template that changes the content opacity when not enabled -->
            <ControlTemplate x:Key="SimpleToggleButtonTemplate" TargetType="ToggleButton">
                <Grid>
                    <ContentControl Content="{TemplateBinding Content}" />

                    <Border Background="{StaticResource PhoneBackgroundBrush}"
                            Opacity="0.7"
                            Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, 
                                                 Converter={StaticResource BoolToOppositeVisibility}}" />
                </Grid>
            </ControlTemplate>

            <!-- Meal type template -->
            <DataTemplate x:Key="MealTypeTemplate">
                <ToggleButton IsChecked="{Binding Item2, Mode=TwoWay}"
                              Template="{StaticResource SimpleToggleButtonTemplate}">
                    <Grid Width="160"
                          Margin="0,0,0,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Image -->
                        <Image Source="{Binding Item1, Converter={StaticResource EnumToImage}}"
                               Width="100" Height="100" />
                        
                        <!-- Name -->
                        <TextBlock Grid.Row="1"
                                   Text="{Binding Item1, Converter={StaticResource EnumToString}}"
                                   HorizontalAlignment="Center"
                                   Style="{StaticResource PhoneTextNormalStyle}" />
                    </Grid>
                </ToggleButton>
            </DataTemplate>

            <!-- Restaurant template -->
            <DataTemplate x:Key="RestaurantTemplate">
                <CheckBox Grid.Column="1"
                          Content="{Binding Item1, Converter={StaticResource EnumToString}}"
                          IsChecked="{Binding Item2, Mode=TwoWay}"
                          VerticalContentAlignment="Top"
                          Margin="2,0,0,0"
                          Padding="0,0,-100,0"
                          Width="220" />
            </DataTemplate>
        </ResourceDictionary>
    </comControls:BasePage.Resources>

    <!-- Main grid -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!-- Page header -->
        <Border Background="{StaticResource AppHeaderBackgroundBrush}">
            <TextBlock Text="{Binding Resources.PagesHeader, Source={StaticResource Strings}}"
                       Style="{StaticResource AppTextHeaderStyle}" />
        </Border>

        <!-- Page title -->
        <Border Grid.Row="1"
                Background="{StaticResource AppHeaderBackgroundBrush}">
            <TextBlock Text="{Binding Resources.SettingsViewTitle, Source={StaticResource Strings}}"
                       Style="{StaticResource AppTextTitleStyle}" />
        </Border>

        <!-- Price target picker -->
        <Grid Grid.Row="2"
              Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Resources.PriceTarget, Source={StaticResource Strings}}"
                       Style="{StaticResource PhoneTextLargeStyle}"
                       FontSize="{Binding FontSize, ElementName=PriceTargetPicker}"
                       VerticalAlignment="Center" />
            <!-- HACK: See code-behind for SelectedItem binding and explanation -->
            <tool:ListPicker x:Name="PriceTargetPicker"
                             Grid.Column="1"
                             ItemsSource="{Binding PriceTargets}"
                             ItemTemplate="{StaticResource PriceTargetTemplate}"
                             FontFamily="{StaticResource PhoneFontFamilyNormal}"
                             Margin="-6,-7,8,0"
                             Loaded="ListPicker_Loaded" />
        </Grid>

        <!-- Maximum budget picker -->
        <StackPanel Grid.Row="3"
                    Orientation="Horizontal">
            <TextBlock Text="{Binding Resources.MaximumBudget, Source={StaticResource Strings}}"
                       Style="{StaticResource PhoneTextLargeStyle}"
                       FontSize="{Binding FontSize, ElementName=MaximumBudgetBox}"
                       VerticalAlignment="Center" />
            <TextBox x:Name="MaximumBudgetBox"
                     InputScope="Number"
                     Text="{Binding Settings.MaximumBudget, Converter={StaticResource DoubleToString}, Mode=TwoWay}"
                     Width="120"
                     Margin="-10,0" />
            <TextBlock Text="CHF"
                       Style="{StaticResource PhoneTextLargeStyle}"
                       FontSize="{Binding FontSize, ElementName=MaximumBudgetBox}"
                       VerticalAlignment="Center" />
        </StackPanel>
        
        <!-- Meal type filters explanation -->
        <TextBlock Grid.Row="4"
                   Text="{Binding Resources.MealTypeFilterExplanation, Source={StaticResource Strings}}"
                   Style="{StaticResource PhoneTextSmallStyle}" />

        <!-- Meal type filters -->
        <ItemsControl Grid.Row="5"
                      ItemsSource="{Binding DisplayedMealTypes}"
                      ItemTemplate="{StaticResource MealTypeTemplate}"
                      ItemsPanel="{StaticResource WrapItemsPanel}"
                      Style="{StaticResource ScrollingItemsControlStyle}" />
    </Grid>
</comControls:BasePage>