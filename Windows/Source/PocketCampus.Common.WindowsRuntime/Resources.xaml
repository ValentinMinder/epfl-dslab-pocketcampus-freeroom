<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Color x:Key="AppStatusBarBackgroundColor">#E5060A</Color>
    <Color x:Key="AppStatusBarForegroundColor">White</Color>


    <SolidColorBrush x:Key="AppHeaderBackgroundBrush"
                     Color="#E5060A" />
    <SolidColorBrush x:Key="AppHeaderForegroundBrush"
                     Color="White" />

    <SolidColorBrush x:Key="AppSecondaryHeaderBackgroundBrush" 
                     Color="#E0E0E0" />
    <SolidColorBrush x:Key="AppSecondaryHeaderForegroundBrush" 
                     Color="Black" />


    <!-- Normal text (can't set it as default for whatever reason) -->
    <Style x:Key="AppNormalTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextStyleMediumFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiLight}" />
        <Setter Property="TextWrapping" Value="WrapWholeWords" />
    </Style>

    <!-- Subtle text -->
    <Style x:Key="AppSubtleTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PhoneMidBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextStyleMediumFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiLight}" />
        <Setter Property="TextWrapping" Value="WrapWholeWords" />
    </Style>

    <!-- Large text -->
    <Style x:Key="AppLargeTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextStyleLargeFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiLight}" />
        <Setter Property="TextWrapping" Value="WrapWholeWords" />
    </Style>

    <!-- Large centered text -->
    <Style x:Key="AppCenterTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource AppLargeTextBlockStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="WrapWholeWords" />
    </Style>

    <!-- Group header text -->
    <Style x:Key="AppGroupHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PhoneMidBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextStyleLargeFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiLight}" />
        <Setter Property="TextWrapping" Value="WrapWholeWords" />
    </Style>

    <!-- Header text -->
    <Style x:Key="AppHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AppHeaderForegroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextStyleMediumFontSize}" />
        <Setter Property="Margin" Value="19,5,0,0" />
    </Style>

    <!-- Title text -->
    <Style x:Key="AppTitleTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AppHeaderForegroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextStyleExtraLargePlusFontSize}" />
        <Setter Property="Margin" Value="19,0,0,5" />
    </Style>


    <!-- ListViewItem style that stretches its contents -->
    <Style x:Key="AppStretchListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>


    <!-- Pivot style fix, inspired from http://modernography.wordpress.com/2014/07/31/fixing-pivot-control-layout-issues/
         No more title, since we need it outside of the "loading..." -->
    <x:Int32 x:Key="PivotHeaderItemCharacterSpacing">0</x:Int32>
    <Thickness x:Key="PivotItemMargin">19,0,0,0</Thickness>
    <Thickness x:Key="PivotHeaderItemMargin">19,-6.5,5,0</Thickness>
    <Style TargetType="Pivot">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Pivot">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="ScrollViewer"
                                      HorizontalSnapPointsType="MandatorySingle"
                                      HorizontalSnapPointsAlignment="Center"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollMode="Disabled"
                                      VerticalScrollBarVisibility="Disabled"
                                      VerticalSnapPointsType="None"
                                      VerticalContentAlignment="Stretch"
                                      ZoomMode="Disabled"
                                      Template="{StaticResource ScrollViewerScrollBarlessTemplate}">
                            <PivotPanel x:Name="Panel"
                                        VerticalAlignment="Stretch">
                                <!-- RequestedTheme HACK to get white foreground for headers -->
                                <PivotHeaderPanel x:Name="Header"
                                                  Background="{StaticResource AppHeaderBackgroundBrush}"
                                                  RequestedTheme="Dark">
                                    <PivotHeaderPanel.RenderTransform>
                                        <CompositeTransform x:Name="HeaderTranslateTransform"
                                                            TranslateX="0" />
                                    </PivotHeaderPanel.RenderTransform>
                                </PivotHeaderPanel>
                                <ItemsPresenter x:Name="PivotItemPresenter">
                                    <ItemsPresenter.RenderTransform>
                                        <TranslateTransform x:Name="ItemsPresenterTranslateTransform"
                                                            X="0" />
                                    </ItemsPresenter.RenderTransform>
                                </ItemsPresenter>
                            </PivotPanel>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Button that simply displays its contents; only the "pressed" effects are kept -->
    <Style x:Key="AppTransparentButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed" To="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PointerOver" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="Border" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button for commands, without margins or animations -->
    <Style x:Key="AppCommandButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- "Live tile" button style -->
    <SolidColorBrush x:Key="AppTileBackgroundBrush"
                     Color="#E5060A" />
    <SolidColorBrush x:Key="AppTileForegroundBrush"
                     Color="White" />
    <SolidColorBrush x:Key="AppTilePressedBackgroundBrush"
                     Color="#C9060C" />
    <Style x:Key="AppTileButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{StaticResource AppTileBackgroundBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed" To="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PointerOver" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="Border" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppTilePressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Foreground="{StaticResource AppTileForegroundBrush}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>