/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


@interface DirectoryPersonRole : NSObject <TBase, NSCoding> {
  NSString * __extendedLocalizedUnit;
  NSString * __localizedTitle;

  BOOL __extendedLocalizedUnit_isset;
  BOOL __localizedTitle_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=extendedLocalizedUnit, setter=setExtendedLocalizedUnit:) NSString * extendedLocalizedUnit;
@property (nonatomic, retain, getter=localizedTitle, setter=setLocalizedTitle:) NSString * localizedTitle;
#endif

- (id) init;
- (id) initWithExtendedLocalizedUnit: (NSString *) extendedLocalizedUnit localizedTitle: (NSString *) localizedTitle;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) extendedLocalizedUnit;
- (void) setExtendedLocalizedUnit: (NSString *) extendedLocalizedUnit;
#endif
- (BOOL) extendedLocalizedUnitIsSet;

#if !__has_feature(objc_arc)
- (NSString *) localizedTitle;
- (void) setLocalizedTitle: (NSString *) localizedTitle;
#endif
- (BOOL) localizedTitleIsSet;

@end

@interface Person : NSObject <TBase, NSCoding> {
  NSString * __firstName;
  NSString * __lastName;
  NSString * __sciper;
  NSString * __email;
  NSString * __web;
  NSString * __privatePhoneNumber;
  NSString * __officePhoneNumber;
  NSString * __office;
  NSString * __gaspar;
  NSMutableArray * __organisationalUnits;
  NSString * __pictureUrl;
  NSMutableDictionary * __roles;
  NSMutableDictionary * __homepages;

  BOOL __firstName_isset;
  BOOL __lastName_isset;
  BOOL __sciper_isset;
  BOOL __email_isset;
  BOOL __web_isset;
  BOOL __privatePhoneNumber_isset;
  BOOL __officePhoneNumber_isset;
  BOOL __office_isset;
  BOOL __gaspar_isset;
  BOOL __organisationalUnits_isset;
  BOOL __pictureUrl_isset;
  BOOL __roles_isset;
  BOOL __homepages_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=firstName, setter=setFirstName:) NSString * firstName;
@property (nonatomic, retain, getter=lastName, setter=setLastName:) NSString * lastName;
@property (nonatomic, retain, getter=sciper, setter=setSciper:) NSString * sciper;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=web, setter=setWeb:) NSString * web;
@property (nonatomic, retain, getter=privatePhoneNumber, setter=setPrivatePhoneNumber:) NSString * privatePhoneNumber;
@property (nonatomic, retain, getter=officePhoneNumber, setter=setOfficePhoneNumber:) NSString * officePhoneNumber;
@property (nonatomic, retain, getter=office, setter=setOffice:) NSString * office;
@property (nonatomic, retain, getter=gaspar, setter=setGaspar:) NSString * gaspar;
@property (nonatomic, retain, getter=organisationalUnits, setter=setOrganisationalUnits:) NSMutableArray * organisationalUnits;
@property (nonatomic, retain, getter=pictureUrl, setter=setPictureUrl:) NSString * pictureUrl;
@property (nonatomic, retain, getter=roles, setter=setRoles:) NSMutableDictionary * roles;
@property (nonatomic, retain, getter=homepages, setter=setHomepages:) NSMutableDictionary * homepages;
#endif

- (id) init;
- (id) initWithFirstName: (NSString *) firstName lastName: (NSString *) lastName sciper: (NSString *) sciper email: (NSString *) email web: (NSString *) web privatePhoneNumber: (NSString *) privatePhoneNumber officePhoneNumber: (NSString *) officePhoneNumber office: (NSString *) office gaspar: (NSString *) gaspar organisationalUnits: (NSMutableArray *) organisationalUnits pictureUrl: (NSString *) pictureUrl roles: (NSMutableDictionary *) roles homepages: (NSMutableDictionary *) homepages;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) firstName;
- (void) setFirstName: (NSString *) firstName;
#endif
- (BOOL) firstNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) lastName;
- (void) setLastName: (NSString *) lastName;
#endif
- (BOOL) lastNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sciper;
- (void) setSciper: (NSString *) sciper;
#endif
- (BOOL) sciperIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) web;
- (void) setWeb: (NSString *) web;
#endif
- (BOOL) webIsSet;

#if !__has_feature(objc_arc)
- (NSString *) privatePhoneNumber;
- (void) setPrivatePhoneNumber: (NSString *) privatePhoneNumber;
#endif
- (BOOL) privatePhoneNumberIsSet;

#if !__has_feature(objc_arc)
- (NSString *) officePhoneNumber;
- (void) setOfficePhoneNumber: (NSString *) officePhoneNumber;
#endif
- (BOOL) officePhoneNumberIsSet;

#if !__has_feature(objc_arc)
- (NSString *) office;
- (void) setOffice: (NSString *) office;
#endif
- (BOOL) officeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) gaspar;
- (void) setGaspar: (NSString *) gaspar;
#endif
- (BOOL) gasparIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) organisationalUnits;
- (void) setOrganisationalUnits: (NSMutableArray *) organisationalUnits;
#endif
- (BOOL) organisationalUnitsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) pictureUrl;
- (void) setPictureUrl: (NSString *) pictureUrl;
#endif
- (BOOL) pictureUrlIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) roles;
- (void) setRoles: (NSMutableDictionary *) roles;
#endif
- (BOOL) rolesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) homepages;
- (void) setHomepages: (NSMutableDictionary *) homepages;
#endif
- (BOOL) homepagesIsSet;

@end

@interface LDAPException : NSException <TBase, NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface NoPictureFound : NSException <TBase, NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface DirectoryRequest : NSObject <TBase, NSCoding> {
  NSString * __query;
  NSString * __language;
  NSData * __resultSetCookie;

  BOOL __query_isset;
  BOOL __language_isset;
  BOOL __resultSetCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=query, setter=setQuery:) NSString * query;
@property (nonatomic, retain, getter=language, setter=setLanguage:) NSString * language;
@property (nonatomic, retain, getter=resultSetCookie, setter=setResultSetCookie:) NSData * resultSetCookie;
#endif

- (id) init;
- (id) initWithQuery: (NSString *) query language: (NSString *) language resultSetCookie: (NSData *) resultSetCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) query;
- (void) setQuery: (NSString *) query;
#endif
- (BOOL) queryIsSet;

#if !__has_feature(objc_arc)
- (NSString *) language;
- (void) setLanguage: (NSString *) language;
#endif
- (BOOL) languageIsSet;

#if !__has_feature(objc_arc)
- (NSData *) resultSetCookie;
- (void) setResultSetCookie: (NSData *) resultSetCookie;
#endif
- (BOOL) resultSetCookieIsSet;

@end

@interface DirectoryResponse : NSObject <TBase, NSCoding> {
  int32_t __status;
  NSMutableArray * __results;
  NSData * __resultSetCookie;

  BOOL __status_isset;
  BOOL __results_isset;
  BOOL __resultSetCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int32_t status;
@property (nonatomic, retain, getter=results, setter=setResults:) NSMutableArray * results;
@property (nonatomic, retain, getter=resultSetCookie, setter=setResultSetCookie:) NSData * resultSetCookie;
#endif

- (id) init;
- (id) initWithStatus: (int32_t) status results: (NSMutableArray *) results resultSetCookie: (NSData *) resultSetCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) status;
- (void) setStatus: (int32_t) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) results;
- (void) setResults: (NSMutableArray *) results;
#endif
- (BOOL) resultsIsSet;

#if !__has_feature(objc_arc)
- (NSData *) resultSetCookie;
- (void) setResultSetCookie: (NSData *) resultSetCookie;
#endif
- (BOOL) resultSetCookieIsSet;

@end

@protocol DirectoryService <NSObject>
- (DirectoryResponse *) searchDirectory: (DirectoryRequest *) req;  // throws TException
@end

@interface DirectoryServiceClient : NSObject <DirectoryService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface DirectoryServiceProcessor : NSObject <TProcessor> {
  id <DirectoryService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithDirectoryService: (id <DirectoryService>) service;
- (id<DirectoryService>) service;
@end

@interface directoryConstants : NSObject {
}
@end
