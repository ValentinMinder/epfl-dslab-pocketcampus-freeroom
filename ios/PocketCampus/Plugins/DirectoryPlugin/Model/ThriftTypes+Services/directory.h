/*
 * Copyright (c) 2014, PocketCampus.Org
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 	* Redistributions of source code must retain the above copyright
 * 	  notice, this list of conditions and the following disclaimer.
 * 	* Redistributions in binary form must reproduce the above copyright
 * 	  notice, this list of conditions and the following disclaimer in the
 * 	  documentation and/or other materials provided with the distribution.
 * 	* Neither the name of PocketCampus.Org nor the
 * 	  names of its contributors may be used to endorse or promote products
 * 	  derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


@interface DirectoryPersonRole : NSObject <NSCoding> {
  NSString * __extendedLocalizedUnit;
  NSString * __localizedTitle;

  BOOL __extendedLocalizedUnit_isset;
  BOOL __localizedTitle_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=extendedLocalizedUnit, setter=setExtendedLocalizedUnit:) NSString * extendedLocalizedUnit;
@property (nonatomic, retain, getter=localizedTitle, setter=setLocalizedTitle:) NSString * localizedTitle;
#endif

- (id) initWithExtendedLocalizedUnit: (NSString *) extendedLocalizedUnit localizedTitle: (NSString *) localizedTitle;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) extendedLocalizedUnit;
- (void) setExtendedLocalizedUnit: (NSString *) extendedLocalizedUnit;
- (BOOL) extendedLocalizedUnitIsSet;

- (NSString *) localizedTitle;
- (void) setLocalizedTitle: (NSString *) localizedTitle;
- (BOOL) localizedTitleIsSet;

@end

@interface Person : NSObject <NSCoding> {
  NSString * __firstName;
  NSString * __lastName;
  NSString * __sciper;
  NSString * __email;
  NSString * __web;
  NSString * __privatePhoneNumber;
  NSString * __officePhoneNumber;
  NSString * __office;
  NSString * __gaspar;
  NSArray * __organisationalUnits;
  NSString * __pictureUrl;
  NSDictionary * __roles;
  NSDictionary * __homepages;

  BOOL __firstName_isset;
  BOOL __lastName_isset;
  BOOL __sciper_isset;
  BOOL __email_isset;
  BOOL __web_isset;
  BOOL __privatePhoneNumber_isset;
  BOOL __officePhoneNumber_isset;
  BOOL __office_isset;
  BOOL __gaspar_isset;
  BOOL __organisationalUnits_isset;
  BOOL __pictureUrl_isset;
  BOOL __roles_isset;
  BOOL __homepages_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=firstName, setter=setFirstName:) NSString * firstName;
@property (nonatomic, retain, getter=lastName, setter=setLastName:) NSString * lastName;
@property (nonatomic, retain, getter=sciper, setter=setSciper:) NSString * sciper;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=web, setter=setWeb:) NSString * web;
@property (nonatomic, retain, getter=privatePhoneNumber, setter=setPrivatePhoneNumber:) NSString * privatePhoneNumber;
@property (nonatomic, retain, getter=officePhoneNumber, setter=setOfficePhoneNumber:) NSString * officePhoneNumber;
@property (nonatomic, retain, getter=office, setter=setOffice:) NSString * office;
@property (nonatomic, retain, getter=gaspar, setter=setGaspar:) NSString * gaspar;
@property (nonatomic, retain, getter=organisationalUnits, setter=setOrganisationalUnits:) NSArray * organisationalUnits;
@property (nonatomic, retain, getter=pictureUrl, setter=setPictureUrl:) NSString * pictureUrl;
@property (nonatomic, retain, getter=roles, setter=setRoles:) NSDictionary * roles;
@property (nonatomic, retain, getter=homepages, setter=setHomepages:) NSDictionary * homepages;
#endif

- (id) initWithFirstName: (NSString *) firstName lastName: (NSString *) lastName sciper: (NSString *) sciper email: (NSString *) email web: (NSString *) web privatePhoneNumber: (NSString *) privatePhoneNumber officePhoneNumber: (NSString *) officePhoneNumber office: (NSString *) office gaspar: (NSString *) gaspar organisationalUnits: (NSArray *) organisationalUnits pictureUrl: (NSString *) pictureUrl roles: (NSDictionary *) roles homepages: (NSDictionary *) homepages;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) firstName;
- (void) setFirstName: (NSString *) firstName;
- (BOOL) firstNameIsSet;

- (NSString *) lastName;
- (void) setLastName: (NSString *) lastName;
- (BOOL) lastNameIsSet;

- (NSString *) sciper;
- (void) setSciper: (NSString *) sciper;
- (BOOL) sciperIsSet;

- (NSString *) email;
- (void) setEmail: (NSString *) email;
- (BOOL) emailIsSet;

- (NSString *) web;
- (void) setWeb: (NSString *) web;
- (BOOL) webIsSet;

- (NSString *) privatePhoneNumber;
- (void) setPrivatePhoneNumber: (NSString *) privatePhoneNumber;
- (BOOL) privatePhoneNumberIsSet;

- (NSString *) officePhoneNumber;
- (void) setOfficePhoneNumber: (NSString *) officePhoneNumber;
- (BOOL) officePhoneNumberIsSet;

- (NSString *) office;
- (void) setOffice: (NSString *) office;
- (BOOL) officeIsSet;

- (NSString *) gaspar;
- (void) setGaspar: (NSString *) gaspar;
- (BOOL) gasparIsSet;

- (NSArray *) organisationalUnits;
- (void) setOrganisationalUnits: (NSArray *) organisationalUnits;
- (BOOL) organisationalUnitsIsSet;

- (NSString *) pictureUrl;
- (void) setPictureUrl: (NSString *) pictureUrl;
- (BOOL) pictureUrlIsSet;

- (NSDictionary *) roles;
- (void) setRoles: (NSDictionary *) roles;
- (BOOL) rolesIsSet;

- (NSDictionary *) homepages;
- (void) setHomepages: (NSDictionary *) homepages;
- (BOOL) homepagesIsSet;

@end

@interface LDAPException : NSException <NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) message;
- (void) setMessage: (NSString *) message;
- (BOOL) messageIsSet;

@end

@interface NoPictureFound : NSException <NSCoding> {
  NSString * __message;

  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) initWithMessage: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) message;
- (void) setMessage: (NSString *) message;
- (BOOL) messageIsSet;

@end

@interface DirectoryRequest : NSObject <NSCoding> {
  NSString * __query;
  NSString * __language;
  NSData * __resultSetCookie;

  BOOL __query_isset;
  BOOL __language_isset;
  BOOL __resultSetCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=query, setter=setQuery:) NSString * query;
@property (nonatomic, retain, getter=language, setter=setLanguage:) NSString * language;
@property (nonatomic, retain, getter=resultSetCookie, setter=setResultSetCookie:) NSData * resultSetCookie;
#endif

- (id) initWithQuery: (NSString *) query language: (NSString *) language resultSetCookie: (NSData *) resultSetCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) query;
- (void) setQuery: (NSString *) query;
- (BOOL) queryIsSet;

- (NSString *) language;
- (void) setLanguage: (NSString *) language;
- (BOOL) languageIsSet;

- (NSData *) resultSetCookie;
- (void) setResultSetCookie: (NSData *) resultSetCookie;
- (BOOL) resultSetCookieIsSet;

@end

@interface DirectoryResponse : NSObject <NSCoding> {
  int32_t __status;
  NSArray * __results;
  NSData * __resultSetCookie;

  BOOL __status_isset;
  BOOL __results_isset;
  BOOL __resultSetCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int32_t status;
@property (nonatomic, retain, getter=results, setter=setResults:) NSArray * results;
@property (nonatomic, retain, getter=resultSetCookie, setter=setResultSetCookie:) NSData * resultSetCookie;
#endif

- (id) initWithStatus: (int32_t) status results: (NSArray *) results resultSetCookie: (NSData *) resultSetCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int32_t) status;
- (void) setStatus: (int32_t) status;
- (BOOL) statusIsSet;

- (NSArray *) results;
- (void) setResults: (NSArray *) results;
- (BOOL) resultsIsSet;

- (NSData *) resultSetCookie;
- (void) setResultSetCookie: (NSData *) resultSetCookie;
- (BOOL) resultSetCookieIsSet;

@end

@protocol DirectoryService <NSObject>
- (NSArray *) searchPersons: (NSString *) nameOrSciper;  // throws LDAPException *, TException
- (NSString *) getProfilePicture: (NSString *) sciper;  // throws NoPictureFound *, TException
- (NSArray *) autocomplete: (NSString *) constraint;  // throws TException
- (DirectoryResponse *) searchDirectory: (DirectoryRequest *) req;  // throws TException
@end

@interface DirectoryServiceClient : NSObject <DirectoryService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface DirectoryServiceProcessor : NSObject <TProcessor> {
  id <DirectoryService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithDirectoryService: (id <DirectoryService>) service;
- (id<DirectoryService>) service;
@end

@interface directoryConstants : NSObject {
}
@end
