/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"

#import "map.h"

enum SubmitStatus {
  SubmitStatus_ALREADY_VOTED = 0,
  SubmitStatus_VALID = 1,
  SubmitStatus_TOO_EARLY = 2,
  SubmitStatus_ERROR = 3,
  SubmitStatus_MEAL_IN_DISTANT_PAST = 4
};

enum PriceTarget {
  PriceTarget_STUDENT = 1,
  PriceTarget_PHD_STUDENT = 2,
  PriceTarget_STAFF = 3,
  PriceTarget_VISITOR = 4,
  PriceTarget_ALL = 5
};

enum MealType {
  MealType_UNKNOWN = 1,
  MealType_FISH = 2,
  MealType_MEAT = 3,
  MealType_POULTRY = 4,
  MealType_VEGETARIAN = 5,
  MealType_GREEN_FORK = 6,
  MealType_PASTA = 7,
  MealType_PIZZA = 8,
  MealType_THAI = 9,
  MealType_INDIAN = 10,
  MealType_LEBANESE = 11
};

enum MealTime {
  MealTime_LUNCH = 1,
  MealTime_DINNER = 2
};

enum FoodStatusCode {
  FoodStatusCode_OK = 200,
  FoodStatusCode_NETWORK_ERROR = 404
};

@interface Restaurant : NSObject <TBase, NSCoding> {
  int64_t __restaurantId;
  NSString * __name;

  BOOL __restaurantId_isset;
  BOOL __name_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=restaurantId, setter=setRestaurantId:) int64_t restaurantId;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
#endif

- (id) init;
- (id) initWithRestaurantId: (int64_t) restaurantId name: (NSString *) name;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) restaurantId;
- (void) setRestaurantId: (int64_t) restaurantId;
#endif
- (BOOL) restaurantIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

@end

@interface Rating : NSObject <TBase, NSCoding> {
  double __ratingValue;
  int32_t __numberOfVotes;
  double __sumOfRatings;

  BOOL __ratingValue_isset;
  BOOL __numberOfVotes_isset;
  BOOL __sumOfRatings_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=ratingValue, setter=setRatingValue:) double ratingValue;
@property (nonatomic, getter=numberOfVotes, setter=setNumberOfVotes:) int32_t numberOfVotes;
@property (nonatomic, getter=sumOfRatings, setter=setSumOfRatings:) double sumOfRatings;
#endif

- (id) init;
- (id) initWithRatingValue: (double) ratingValue numberOfVotes: (int32_t) numberOfVotes sumOfRatings: (double) sumOfRatings;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) ratingValue;
- (void) setRatingValue: (double) ratingValue;
#endif
- (BOOL) ratingValueIsSet;

#if !__has_feature(objc_arc)
- (int32_t) numberOfVotes;
- (void) setNumberOfVotes: (int32_t) numberOfVotes;
#endif
- (BOOL) numberOfVotesIsSet;

#if !__has_feature(objc_arc)
- (double) sumOfRatings;
- (void) setSumOfRatings: (double) sumOfRatings;
#endif
- (BOOL) sumOfRatingsIsSet;

@end

@interface Meal : NSObject <TBase, NSCoding> {
  int64_t __mealId;
  NSString * __name;
  NSString * __mealDescription;
  Restaurant * __restaurant;
  Rating * __rating;

  BOOL __mealId_isset;
  BOOL __name_isset;
  BOOL __mealDescription_isset;
  BOOL __restaurant_isset;
  BOOL __rating_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=mealId, setter=setMealId:) int64_t mealId;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=mealDescription, setter=setMealDescription:) NSString * mealDescription;
@property (nonatomic, retain, getter=restaurant, setter=setRestaurant:) Restaurant * restaurant;
@property (nonatomic, retain, getter=rating, setter=setRating:) Rating * rating;
#endif

- (id) init;
- (id) initWithMealId: (int64_t) mealId name: (NSString *) name mealDescription: (NSString *) mealDescription restaurant: (Restaurant *) restaurant rating: (Rating *) rating;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) mealId;
- (void) setMealId: (int64_t) mealId;
#endif
- (BOOL) mealIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mealDescription;
- (void) setMealDescription: (NSString *) mealDescription;
#endif
- (BOOL) mealDescriptionIsSet;

#if !__has_feature(objc_arc)
- (Restaurant *) restaurant;
- (void) setRestaurant: (Restaurant *) restaurant;
#endif
- (BOOL) restaurantIsSet;

#if !__has_feature(objc_arc)
- (Rating *) rating;
- (void) setRating: (Rating *) rating;
#endif
- (BOOL) ratingIsSet;

@end

@interface EpflRating : NSObject <TBase, NSCoding> {
  double __ratingValue;
  int32_t __voteCount;

  BOOL __ratingValue_isset;
  BOOL __voteCount_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=ratingValue, setter=setRatingValue:) double ratingValue;
@property (nonatomic, getter=voteCount, setter=setVoteCount:) int32_t voteCount;
#endif

- (id) init;
- (id) initWithRatingValue: (double) ratingValue voteCount: (int32_t) voteCount;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) ratingValue;
- (void) setRatingValue: (double) ratingValue;
#endif
- (BOOL) ratingValueIsSet;

#if !__has_feature(objc_arc)
- (int32_t) voteCount;
- (void) setVoteCount: (int32_t) voteCount;
#endif
- (BOOL) voteCountIsSet;

@end

@interface EpflMeal : NSObject <TBase, NSCoding> {
  int64_t __mId;
  NSString * __mName;
  NSString * __mDescription;
  NSMutableDictionary * __mPrices;
  double __mHalfPortionPrice;
  NSMutableArray * __mTypes;
  EpflRating * __mRating;

  BOOL __mId_isset;
  BOOL __mName_isset;
  BOOL __mDescription_isset;
  BOOL __mPrices_isset;
  BOOL __mHalfPortionPrice_isset;
  BOOL __mTypes_isset;
  BOOL __mRating_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=mId, setter=setMId:) int64_t mId;
@property (nonatomic, retain, getter=mName, setter=setMName:) NSString * mName;
@property (nonatomic, retain, getter=mDescription, setter=setMDescription:) NSString * mDescription;
@property (nonatomic, retain, getter=mPrices, setter=setMPrices:) NSMutableDictionary * mPrices;
@property (nonatomic, getter=mHalfPortionPrice, setter=setMHalfPortionPrice:) double mHalfPortionPrice;
@property (nonatomic, retain, getter=mTypes, setter=setMTypes:) NSMutableArray * mTypes;
@property (nonatomic, retain, getter=mRating, setter=setMRating:) EpflRating * mRating;
#endif

- (id) init;
- (id) initWithMId: (int64_t) mId mName: (NSString *) mName mDescription: (NSString *) mDescription mPrices: (NSMutableDictionary *) mPrices mHalfPortionPrice: (double) mHalfPortionPrice mTypes: (NSMutableArray *) mTypes mRating: (EpflRating *) mRating;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) mId;
- (void) setMId: (int64_t) mId;
#endif
- (BOOL) mIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mName;
- (void) setMName: (NSString *) mName;
#endif
- (BOOL) mNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mDescription;
- (void) setMDescription: (NSString *) mDescription;
#endif
- (BOOL) mDescriptionIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) mPrices;
- (void) setMPrices: (NSMutableDictionary *) mPrices;
#endif
- (BOOL) mPricesIsSet;

#if !__has_feature(objc_arc)
- (double) mHalfPortionPrice;
- (void) setMHalfPortionPrice: (double) mHalfPortionPrice;
#endif
- (BOOL) mHalfPortionPriceIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) mTypes;
- (void) setMTypes: (NSMutableArray *) mTypes;
#endif
- (BOOL) mTypesIsSet;

#if !__has_feature(objc_arc)
- (EpflRating *) mRating;
- (void) setMRating: (EpflRating *) mRating;
#endif
- (BOOL) mRatingIsSet;

@end

@interface EpflRestaurant : NSObject <TBase, NSCoding> {
  int64_t __rId;
  NSString * __rName;
  NSMutableArray * __rMeals;
  MapItem * __rLocation;
  EpflRating * __rRating;
  NSString * __rPictureUrl;

  BOOL __rId_isset;
  BOOL __rName_isset;
  BOOL __rMeals_isset;
  BOOL __rLocation_isset;
  BOOL __rRating_isset;
  BOOL __rPictureUrl_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=rId, setter=setRId:) int64_t rId;
@property (nonatomic, retain, getter=rName, setter=setRName:) NSString * rName;
@property (nonatomic, retain, getter=rMeals, setter=setRMeals:) NSMutableArray * rMeals;
@property (nonatomic, retain, getter=rLocation, setter=setRLocation:) MapItem * rLocation;
@property (nonatomic, retain, getter=rRating, setter=setRRating:) EpflRating * rRating;
@property (nonatomic, retain, getter=rPictureUrl, setter=setRPictureUrl:) NSString * rPictureUrl;
#endif

- (id) init;
- (id) initWithRId: (int64_t) rId rName: (NSString *) rName rMeals: (NSMutableArray *) rMeals rLocation: (MapItem *) rLocation rRating: (EpflRating *) rRating rPictureUrl: (NSString *) rPictureUrl;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) rId;
- (void) setRId: (int64_t) rId;
#endif
- (BOOL) rIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) rName;
- (void) setRName: (NSString *) rName;
#endif
- (BOOL) rNameIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) rMeals;
- (void) setRMeals: (NSMutableArray *) rMeals;
#endif
- (BOOL) rMealsIsSet;

#if !__has_feature(objc_arc)
- (MapItem *) rLocation;
- (void) setRLocation: (MapItem *) rLocation;
#endif
- (BOOL) rLocationIsSet;

#if !__has_feature(objc_arc)
- (EpflRating *) rRating;
- (void) setRRating: (EpflRating *) rRating;
#endif
- (BOOL) rRatingIsSet;

#if !__has_feature(objc_arc)
- (NSString *) rPictureUrl;
- (void) setRPictureUrl: (NSString *) rPictureUrl;
#endif
- (BOOL) rPictureUrlIsSet;

@end

@interface FoodRequest : NSObject <TBase, NSCoding> {
  NSString * __deviceLanguage;
  int __mealTime;
  int64_t __mealDate;
  NSString * __deviceId;
  NSString * __userGaspar;

  BOOL __deviceLanguage_isset;
  BOOL __mealTime_isset;
  BOOL __mealDate_isset;
  BOOL __deviceId_isset;
  BOOL __userGaspar_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=deviceLanguage, setter=setDeviceLanguage:) NSString * deviceLanguage;
@property (nonatomic, getter=mealTime, setter=setMealTime:) int mealTime;
@property (nonatomic, getter=mealDate, setter=setMealDate:) int64_t mealDate;
@property (nonatomic, retain, getter=deviceId, setter=setDeviceId:) NSString * deviceId;
@property (nonatomic, retain, getter=userGaspar, setter=setUserGaspar:) NSString * userGaspar;
#endif

- (id) init;
- (id) initWithDeviceLanguage: (NSString *) deviceLanguage mealTime: (int) mealTime mealDate: (int64_t) mealDate deviceId: (NSString *) deviceId userGaspar: (NSString *) userGaspar;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) deviceLanguage;
- (void) setDeviceLanguage: (NSString *) deviceLanguage;
#endif
- (BOOL) deviceLanguageIsSet;

#if !__has_feature(objc_arc)
- (int) mealTime;
- (void) setMealTime: (int) mealTime;
#endif
- (BOOL) mealTimeIsSet;

#if !__has_feature(objc_arc)
- (int64_t) mealDate;
- (void) setMealDate: (int64_t) mealDate;
#endif
- (BOOL) mealDateIsSet;

#if !__has_feature(objc_arc)
- (NSString *) deviceId;
- (void) setDeviceId: (NSString *) deviceId;
#endif
- (BOOL) deviceIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userGaspar;
- (void) setUserGaspar: (NSString *) userGaspar;
#endif
- (BOOL) userGasparIsSet;

@end

@interface FoodResponse : NSObject <TBase, NSCoding> {
  NSMutableArray * __menu;
  int __userStatus;
  NSMutableDictionary * __mealTypePictureUrls;
  int __statusCode;

  BOOL __menu_isset;
  BOOL __userStatus_isset;
  BOOL __mealTypePictureUrls_isset;
  BOOL __statusCode_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=menu, setter=setMenu:) NSMutableArray * menu;
@property (nonatomic, getter=userStatus, setter=setUserStatus:) int userStatus;
@property (nonatomic, retain, getter=mealTypePictureUrls, setter=setMealTypePictureUrls:) NSMutableDictionary * mealTypePictureUrls;
@property (nonatomic, getter=statusCode, setter=setStatusCode:) int statusCode;
#endif

- (id) init;
- (id) initWithMenu: (NSMutableArray *) menu userStatus: (int) userStatus mealTypePictureUrls: (NSMutableDictionary *) mealTypePictureUrls statusCode: (int) statusCode;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) menu;
- (void) setMenu: (NSMutableArray *) menu;
#endif
- (BOOL) menuIsSet;

#if !__has_feature(objc_arc)
- (int) userStatus;
- (void) setUserStatus: (int) userStatus;
#endif
- (BOOL) userStatusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) mealTypePictureUrls;
- (void) setMealTypePictureUrls: (NSMutableDictionary *) mealTypePictureUrls;
#endif
- (BOOL) mealTypePictureUrlsIsSet;

#if !__has_feature(objc_arc)
- (int) statusCode;
- (void) setStatusCode: (int) statusCode;
#endif
- (BOOL) statusCodeIsSet;

@end

@interface VoteRequest : NSObject <TBase, NSCoding> {
  int64_t __mealId;
  double __rating;
  NSString * __deviceId;

  BOOL __mealId_isset;
  BOOL __rating_isset;
  BOOL __deviceId_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=mealId, setter=setMealId:) int64_t mealId;
@property (nonatomic, getter=rating, setter=setRating:) double rating;
@property (nonatomic, retain, getter=deviceId, setter=setDeviceId:) NSString * deviceId;
#endif

- (id) init;
- (id) initWithMealId: (int64_t) mealId rating: (double) rating deviceId: (NSString *) deviceId;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) mealId;
- (void) setMealId: (int64_t) mealId;
#endif
- (BOOL) mealIdIsSet;

#if !__has_feature(objc_arc)
- (double) rating;
- (void) setRating: (double) rating;
#endif
- (BOOL) ratingIsSet;

#if !__has_feature(objc_arc)
- (NSString *) deviceId;
- (void) setDeviceId: (NSString *) deviceId;
#endif
- (BOOL) deviceIdIsSet;

@end

@interface VoteResponse : NSObject <TBase, NSCoding> {
  int __submitStatus;

  BOOL __submitStatus_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=submitStatus, setter=setSubmitStatus:) int submitStatus;
#endif

- (id) init;
- (id) initWithSubmitStatus: (int) submitStatus;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) submitStatus;
- (void) setSubmitStatus: (int) submitStatus;
#endif
- (BOOL) submitStatusIsSet;

@end

@protocol FoodService <NSObject>
- (NSMutableArray *) getMeals;  // throws TException
- (NSMutableDictionary *) getRatings;  // throws TException
- (int) setRating: (int64_t) mealId rating: (double) rating deviceId: (NSString *) deviceId;  // throws TException
- (FoodResponse *) getFood: (FoodRequest *) foodReq;  // throws TException
- (VoteResponse *) vote: (VoteRequest *) voteReq;  // throws TException
@end

@interface FoodServiceClient : NSObject <FoodService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface FoodServiceProcessor : NSObject <TProcessor> {
  id <FoodService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithFoodService: (id <FoodService>) service;
- (id<FoodService>) service;
@end

@interface foodConstants : NSObject {
}
@end
