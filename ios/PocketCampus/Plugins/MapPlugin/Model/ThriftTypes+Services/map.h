/*
 * Copyright (c) 2014, PocketCampus.Org
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 	* Redistributions of source code must retain the above copyright
 * 	  notice, this list of conditions and the following disclaimer.
 * 	* Redistributions in binary form must reproduce the above copyright
 * 	  notice, this list of conditions and the following disclaimer in the
 * 	  documentation and/or other materials provided with the distribution.
 * 	* Neither the name of PocketCampus.Org nor the
 * 	  names of its contributors may be used to endorse or promote products
 * 	  derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


enum MapStatusCode {
  MapStatusCode_OK = 200,
  MapStatusCode_NETWORK_ERROR = 404
};

@interface MapLayer : NSObject <NSCoding> {
  NSString * __name;
  NSString * __nameForQuery;
  NSString * __nameForQueryAllFloors;

  BOOL __name_isset;
  BOOL __nameForQuery_isset;
  BOOL __nameForQueryAllFloors_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=nameForQuery, setter=setNameForQuery:) NSString * nameForQuery;
@property (nonatomic, retain, getter=nameForQueryAllFloors, setter=setNameForQueryAllFloors:) NSString * nameForQueryAllFloors;
#endif

- (id) initWithName: (NSString *) name nameForQuery: (NSString *) nameForQuery nameForQueryAllFloors: (NSString *) nameForQueryAllFloors;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) name;
- (void) setName: (NSString *) name;
- (BOOL) nameIsSet;

- (NSString *) nameForQuery;
- (void) setNameForQuery: (NSString *) nameForQuery;
- (BOOL) nameForQueryIsSet;

- (NSString *) nameForQueryAllFloors;
- (void) setNameForQueryAllFloors: (NSString *) nameForQueryAllFloors;
- (BOOL) nameForQueryAllFloorsIsSet;

@end

@interface MapLayersResponse : NSObject <NSCoding> {
  int __statusCode;
  NSArray * __layers;

  BOOL __statusCode_isset;
  BOOL __layers_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=statusCode, setter=setStatusCode:) int statusCode;
@property (nonatomic, retain, getter=layers, setter=setLayers:) NSArray * layers;
#endif

- (id) initWithStatusCode: (int) statusCode layers: (NSArray *) layers;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int) statusCode;
- (void) setStatusCode: (int) statusCode;
- (BOOL) statusCodeIsSet;

- (NSArray *) layers;
- (void) setLayers: (NSArray *) layers;
- (BOOL) layersIsSet;

@end

@interface MapItem : NSObject <NSCoding> {
  NSString * __title;
  NSString * __description;
  double __latitude;
  double __longitude;
  int64_t __layerId;
  int64_t __itemId;
  int32_t __floor;
  NSString * __category;

  BOOL __title_isset;
  BOOL __description_isset;
  BOOL __latitude_isset;
  BOOL __longitude_isset;
  BOOL __layerId_isset;
  BOOL __itemId_isset;
  BOOL __floor_isset;
  BOOL __category_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=title, setter=setTitle:) NSString * title;
@property (nonatomic, retain, getter=description, setter=setDescription:) NSString * description;
@property (nonatomic, getter=latitude, setter=setLatitude:) double latitude;
@property (nonatomic, getter=longitude, setter=setLongitude:) double longitude;
@property (nonatomic, getter=layerId, setter=setLayerId:) int64_t layerId;
@property (nonatomic, getter=itemId, setter=setItemId:) int64_t itemId;
@property (nonatomic, getter=floor, setter=setFloor:) int32_t floor;
@property (nonatomic, retain, getter=category, setter=setCategory:) NSString * category;
#endif

- (id) initWithTitle: (NSString *) title description: (NSString *) description latitude: (double) latitude longitude: (double) longitude layerId: (int64_t) layerId itemId: (int64_t) itemId floor: (int32_t) floor category: (NSString *) category;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) title;
- (void) setTitle: (NSString *) title;
- (BOOL) titleIsSet;

- (NSString *) description;
- (void) setDescription: (NSString *) description;
- (BOOL) descriptionIsSet;

- (double) latitude;
- (void) setLatitude: (double) latitude;
- (BOOL) latitudeIsSet;

- (double) longitude;
- (void) setLongitude: (double) longitude;
- (BOOL) longitudeIsSet;

- (int64_t) layerId;
- (void) setLayerId: (int64_t) layerId;
- (BOOL) layerIdIsSet;

- (int64_t) itemId;
- (void) setItemId: (int64_t) itemId;
- (BOOL) itemIdIsSet;

- (int32_t) floor;
- (void) setFloor: (int32_t) floor;
- (BOOL) floorIsSet;

- (NSString *) category;
- (void) setCategory: (NSString *) category;
- (BOOL) categoryIsSet;

@end

@protocol MapService <NSObject>
- (MapLayersResponse *) getLayers;  // throws TException
- (NSArray *) search: (NSString *) query;  // throws TException
@end

@interface MapServiceClient : NSObject <MapService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface MapServiceProcessor : NSObject <TProcessor> {
  id <MapService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithMapService: (id <MapService>) service;
- (id<MapService>) service;
@end

@interface mapConstants : NSObject {
}
@end
