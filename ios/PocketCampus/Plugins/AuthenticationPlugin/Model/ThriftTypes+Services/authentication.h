/* 
 * Copyright (c) 2014, PocketCampus.Org
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 	* Redistributions of source code must retain the above copyright
 * 	  notice, this list of conditions and the following disclaimer.
 * 	* Redistributions in binary form must reproduce the above copyright
 * 	  notice, this list of conditions and the following disclaimer in the
 * 	  documentation and/or other materials provided with the distribution.
 * 	* Neither the name of PocketCampus.Org nor the
 * 	  names of its contributors may be used to endorse or promote products
 * 	  derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */


/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


enum TypeOfService {
  TypeOfService_SERVICE_POCKETCAMPUS = 0,
  TypeOfService_SERVICE_MOODLE = 1,
  TypeOfService_SERVICE_CAMIPRO = 2,
  TypeOfService_SERVICE_ISA = 3
};

@interface TequilaSession : NSObject <NSCoding> {
  NSString * __tequilaCookie;

  BOOL __tequilaCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=tequilaCookie, setter=setTequilaCookie:) NSString * tequilaCookie;
#endif

- (id) initWithTequilaCookie: (NSString *) tequilaCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) tequilaCookie;
- (void) setTequilaCookie: (NSString *) tequilaCookie;
- (BOOL) tequilaCookieIsSet;

@end

@interface TequilaToken : NSObject <NSCoding> {
  NSString * __iTequilaKey;
  NSString * __loginCookie;

  BOOL __iTequilaKey_isset;
  BOOL __loginCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=iTequilaKey, setter=setITequilaKey:) NSString * iTequilaKey;
@property (nonatomic, retain, getter=loginCookie, setter=setLoginCookie:) NSString * loginCookie;
#endif

- (id) initWithITequilaKey: (NSString *) iTequilaKey loginCookie: (NSString *) loginCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) iTequilaKey;
- (void) setITequilaKey: (NSString *) iTequilaKey;
- (BOOL) iTequilaKeyIsSet;

- (NSString *) loginCookie;
- (void) setLoginCookie: (NSString *) loginCookie;
- (BOOL) loginCookieIsSet;

@end

@interface TequilaKey : NSObject <NSCoding> {
  int __tos;
  NSString * __iTequilaKey;
  NSString * __loginCookie;
  NSString * __iTequilaKeyForPc;

  BOOL __tos_isset;
  BOOL __iTequilaKey_isset;
  BOOL __loginCookie_isset;
  BOOL __iTequilaKeyForPc_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=tos, setter=setTos:) int tos;
@property (nonatomic, retain, getter=iTequilaKey, setter=setITequilaKey:) NSString * iTequilaKey;
@property (nonatomic, retain, getter=loginCookie, setter=setLoginCookie:) NSString * loginCookie;
@property (nonatomic, retain, getter=iTequilaKeyForPc, setter=setITequilaKeyForPc:) NSString * iTequilaKeyForPc;
#endif

- (id) initWithTos: (int) tos iTequilaKey: (NSString *) iTequilaKey loginCookie: (NSString *) loginCookie iTequilaKeyForPc: (NSString *) iTequilaKeyForPc;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int) tos;
- (void) setTos: (int) tos;
- (BOOL) tosIsSet;

- (NSString *) iTequilaKey;
- (void) setITequilaKey: (NSString *) iTequilaKey;
- (BOOL) iTequilaKeyIsSet;

- (NSString *) loginCookie;
- (void) setLoginCookie: (NSString *) loginCookie;
- (BOOL) loginCookieIsSet;

- (NSString *) iTequilaKeyForPc;
- (void) setITequilaKeyForPc: (NSString *) iTequilaKeyForPc;
- (BOOL) iTequilaKeyForPcIsSet;

@end

@interface SessionId : NSObject <NSCoding> {
  int __tos;
  NSString * __pocketCampusSessionId;
  NSString * __moodleCookie;
  NSString * __camiproCookie;
  NSString * __isaCookie;

  BOOL __tos_isset;
  BOOL __pocketCampusSessionId_isset;
  BOOL __moodleCookie_isset;
  BOOL __camiproCookie_isset;
  BOOL __isaCookie_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=tos, setter=setTos:) int tos;
@property (nonatomic, retain, getter=pocketCampusSessionId, setter=setPocketCampusSessionId:) NSString * pocketCampusSessionId;
@property (nonatomic, retain, getter=moodleCookie, setter=setMoodleCookie:) NSString * moodleCookie;
@property (nonatomic, retain, getter=camiproCookie, setter=setCamiproCookie:) NSString * camiproCookie;
@property (nonatomic, retain, getter=isaCookie, setter=setIsaCookie:) NSString * isaCookie;
#endif

- (id) initWithTos: (int) tos pocketCampusSessionId: (NSString *) pocketCampusSessionId moodleCookie: (NSString *) moodleCookie camiproCookie: (NSString *) camiproCookie isaCookie: (NSString *) isaCookie;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int) tos;
- (void) setTos: (int) tos;
- (BOOL) tosIsSet;

- (NSString *) pocketCampusSessionId;
- (void) setPocketCampusSessionId: (NSString *) pocketCampusSessionId;
- (BOOL) pocketCampusSessionIdIsSet;

- (NSString *) moodleCookie;
- (void) setMoodleCookie: (NSString *) moodleCookie;
- (BOOL) moodleCookieIsSet;

- (NSString *) camiproCookie;
- (void) setCamiproCookie: (NSString *) camiproCookie;
- (BOOL) camiproCookieIsSet;

- (NSString *) isaCookie;
- (void) setIsaCookie: (NSString *) isaCookie;
- (BOOL) isaCookieIsSet;

@end

@protocol AuthenticationService <NSObject>
- (int32_t) startRefresh: (TequilaSession *) aTequilaSession;  // throws TException
- (int32_t) stopRefresh: (TequilaSession *) aTequilaSession;  // throws TException
- (TequilaKey *) getTequilaKeyForService: (int) aService;  // throws TException
- (SessionId *) getSessionIdForService: (TequilaKey *) aTequilaKey;  // throws TException
- (int32_t) logOutSession: (SessionId *) aSessionId;  // throws TException
@end

@interface AuthenticationServiceClient : NSObject <AuthenticationService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface AuthenticationServiceProcessor : NSObject <TProcessor> {
  id <AuthenticationService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithAuthenticationService: (id <AuthenticationService>) service;
- (id<AuthenticationService>) service;
@end

@interface authenticationConstants : NSObject {
}
@end
