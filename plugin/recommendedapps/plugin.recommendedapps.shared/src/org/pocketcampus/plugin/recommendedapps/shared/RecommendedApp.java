/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.pocketcampus.plugin.recommendedapps.shared;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2014-11-28")
public class RecommendedApp implements org.apache.thrift.TBase<RecommendedApp, RecommendedApp._Fields>, java.io.Serializable, Cloneable, Comparable<RecommendedApp> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecommendedApp");

  private static final org.apache.thrift.protocol.TField APP_STORE_QUERY_FIELD_DESC = new org.apache.thrift.protocol.TField("appStoreQuery", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField APP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("appName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APP_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("appDescription", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField APP_OPEN_URLPATTERN_FIELD_DESC = new org.apache.thrift.protocol.TField("appOpenURLPattern", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField APP_LOGO_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("appLogoURL", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new RecommendedAppStandardSchemeFactory());
    schemes.put(TupleScheme.class, new RecommendedAppTupleSchemeFactory());
  }

  private String appStoreQuery; // required
  private String appName; // optional
  private String appDescription; // optional
  private String appOpenURLPattern; // optional
  private String appLogoURL; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    APP_STORE_QUERY((short)1, "appStoreQuery"),
    APP_NAME((short)2, "appName"),
    APP_DESCRIPTION((short)3, "appDescription"),
    APP_OPEN_URLPATTERN((short)4, "appOpenURLPattern"),
    APP_LOGO_URL((short)5, "appLogoURL");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // APP_STORE_QUERY
          return APP_STORE_QUERY;
        case 2: // APP_NAME
          return APP_NAME;
        case 3: // APP_DESCRIPTION
          return APP_DESCRIPTION;
        case 4: // APP_OPEN_URLPATTERN
          return APP_OPEN_URLPATTERN;
        case 5: // APP_LOGO_URL
          return APP_LOGO_URL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.APP_NAME,_Fields.APP_DESCRIPTION,_Fields.APP_OPEN_URLPATTERN,_Fields.APP_LOGO_URL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APP_STORE_QUERY, new org.apache.thrift.meta_data.FieldMetaData("appStoreQuery", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_NAME, new org.apache.thrift.meta_data.FieldMetaData("appName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("appDescription", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_OPEN_URLPATTERN, new org.apache.thrift.meta_data.FieldMetaData("appOpenURLPattern", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_LOGO_URL, new org.apache.thrift.meta_data.FieldMetaData("appLogoURL", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RecommendedApp.class, metaDataMap);
  }

  public RecommendedApp() {
  }

  public RecommendedApp(
    String appStoreQuery)
  {
    this();
    this.appStoreQuery = appStoreQuery;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RecommendedApp(RecommendedApp other) {
    if (other.isSetAppStoreQuery()) {
      this.appStoreQuery = other.appStoreQuery;
    }
    if (other.isSetAppName()) {
      this.appName = other.appName;
    }
    if (other.isSetAppDescription()) {
      this.appDescription = other.appDescription;
    }
    if (other.isSetAppOpenURLPattern()) {
      this.appOpenURLPattern = other.appOpenURLPattern;
    }
    if (other.isSetAppLogoURL()) {
      this.appLogoURL = other.appLogoURL;
    }
  }

  public RecommendedApp deepCopy() {
    return new RecommendedApp(this);
  }

  @Override
  public void clear() {
    this.appStoreQuery = null;
    this.appName = null;
    this.appDescription = null;
    this.appOpenURLPattern = null;
    this.appLogoURL = null;
  }

  public String getAppStoreQuery() {
    return this.appStoreQuery;
  }

  public RecommendedApp setAppStoreQuery(String appStoreQuery) {
    this.appStoreQuery = appStoreQuery;
    return this;
  }

  public void unsetAppStoreQuery() {
    this.appStoreQuery = null;
  }

  /** Returns true if field appStoreQuery is set (has been assigned a value) and false otherwise */
  public boolean isSetAppStoreQuery() {
    return this.appStoreQuery != null;
  }

  public void setAppStoreQueryIsSet(boolean value) {
    if (!value) {
      this.appStoreQuery = null;
    }
  }

  public String getAppName() {
    return this.appName;
  }

  public RecommendedApp setAppName(String appName) {
    this.appName = appName;
    return this;
  }

  public void unsetAppName() {
    this.appName = null;
  }

  /** Returns true if field appName is set (has been assigned a value) and false otherwise */
  public boolean isSetAppName() {
    return this.appName != null;
  }

  public void setAppNameIsSet(boolean value) {
    if (!value) {
      this.appName = null;
    }
  }

  public String getAppDescription() {
    return this.appDescription;
  }

  public RecommendedApp setAppDescription(String appDescription) {
    this.appDescription = appDescription;
    return this;
  }

  public void unsetAppDescription() {
    this.appDescription = null;
  }

  /** Returns true if field appDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetAppDescription() {
    return this.appDescription != null;
  }

  public void setAppDescriptionIsSet(boolean value) {
    if (!value) {
      this.appDescription = null;
    }
  }

  public String getAppOpenURLPattern() {
    return this.appOpenURLPattern;
  }

  public RecommendedApp setAppOpenURLPattern(String appOpenURLPattern) {
    this.appOpenURLPattern = appOpenURLPattern;
    return this;
  }

  public void unsetAppOpenURLPattern() {
    this.appOpenURLPattern = null;
  }

  /** Returns true if field appOpenURLPattern is set (has been assigned a value) and false otherwise */
  public boolean isSetAppOpenURLPattern() {
    return this.appOpenURLPattern != null;
  }

  public void setAppOpenURLPatternIsSet(boolean value) {
    if (!value) {
      this.appOpenURLPattern = null;
    }
  }

  public String getAppLogoURL() {
    return this.appLogoURL;
  }

  public RecommendedApp setAppLogoURL(String appLogoURL) {
    this.appLogoURL = appLogoURL;
    return this;
  }

  public void unsetAppLogoURL() {
    this.appLogoURL = null;
  }

  /** Returns true if field appLogoURL is set (has been assigned a value) and false otherwise */
  public boolean isSetAppLogoURL() {
    return this.appLogoURL != null;
  }

  public void setAppLogoURLIsSet(boolean value) {
    if (!value) {
      this.appLogoURL = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case APP_STORE_QUERY:
      if (value == null) {
        unsetAppStoreQuery();
      } else {
        setAppStoreQuery((String)value);
      }
      break;

    case APP_NAME:
      if (value == null) {
        unsetAppName();
      } else {
        setAppName((String)value);
      }
      break;

    case APP_DESCRIPTION:
      if (value == null) {
        unsetAppDescription();
      } else {
        setAppDescription((String)value);
      }
      break;

    case APP_OPEN_URLPATTERN:
      if (value == null) {
        unsetAppOpenURLPattern();
      } else {
        setAppOpenURLPattern((String)value);
      }
      break;

    case APP_LOGO_URL:
      if (value == null) {
        unsetAppLogoURL();
      } else {
        setAppLogoURL((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case APP_STORE_QUERY:
      return getAppStoreQuery();

    case APP_NAME:
      return getAppName();

    case APP_DESCRIPTION:
      return getAppDescription();

    case APP_OPEN_URLPATTERN:
      return getAppOpenURLPattern();

    case APP_LOGO_URL:
      return getAppLogoURL();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case APP_STORE_QUERY:
      return isSetAppStoreQuery();
    case APP_NAME:
      return isSetAppName();
    case APP_DESCRIPTION:
      return isSetAppDescription();
    case APP_OPEN_URLPATTERN:
      return isSetAppOpenURLPattern();
    case APP_LOGO_URL:
      return isSetAppLogoURL();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof RecommendedApp)
      return this.equals((RecommendedApp)that);
    return false;
  }

  public boolean equals(RecommendedApp that) {
    if (that == null)
      return false;

    boolean this_present_appStoreQuery = true && this.isSetAppStoreQuery();
    boolean that_present_appStoreQuery = true && that.isSetAppStoreQuery();
    if (this_present_appStoreQuery || that_present_appStoreQuery) {
      if (!(this_present_appStoreQuery && that_present_appStoreQuery))
        return false;
      if (!this.appStoreQuery.equals(that.appStoreQuery))
        return false;
    }

    boolean this_present_appName = true && this.isSetAppName();
    boolean that_present_appName = true && that.isSetAppName();
    if (this_present_appName || that_present_appName) {
      if (!(this_present_appName && that_present_appName))
        return false;
      if (!this.appName.equals(that.appName))
        return false;
    }

    boolean this_present_appDescription = true && this.isSetAppDescription();
    boolean that_present_appDescription = true && that.isSetAppDescription();
    if (this_present_appDescription || that_present_appDescription) {
      if (!(this_present_appDescription && that_present_appDescription))
        return false;
      if (!this.appDescription.equals(that.appDescription))
        return false;
    }

    boolean this_present_appOpenURLPattern = true && this.isSetAppOpenURLPattern();
    boolean that_present_appOpenURLPattern = true && that.isSetAppOpenURLPattern();
    if (this_present_appOpenURLPattern || that_present_appOpenURLPattern) {
      if (!(this_present_appOpenURLPattern && that_present_appOpenURLPattern))
        return false;
      if (!this.appOpenURLPattern.equals(that.appOpenURLPattern))
        return false;
    }

    boolean this_present_appLogoURL = true && this.isSetAppLogoURL();
    boolean that_present_appLogoURL = true && that.isSetAppLogoURL();
    if (this_present_appLogoURL || that_present_appLogoURL) {
      if (!(this_present_appLogoURL && that_present_appLogoURL))
        return false;
      if (!this.appLogoURL.equals(that.appLogoURL))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_appStoreQuery = true && (isSetAppStoreQuery());
    list.add(present_appStoreQuery);
    if (present_appStoreQuery)
      list.add(appStoreQuery);

    boolean present_appName = true && (isSetAppName());
    list.add(present_appName);
    if (present_appName)
      list.add(appName);

    boolean present_appDescription = true && (isSetAppDescription());
    list.add(present_appDescription);
    if (present_appDescription)
      list.add(appDescription);

    boolean present_appOpenURLPattern = true && (isSetAppOpenURLPattern());
    list.add(present_appOpenURLPattern);
    if (present_appOpenURLPattern)
      list.add(appOpenURLPattern);

    boolean present_appLogoURL = true && (isSetAppLogoURL());
    list.add(present_appLogoURL);
    if (present_appLogoURL)
      list.add(appLogoURL);

    return list.hashCode();
  }

  @Override
  public int compareTo(RecommendedApp other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAppStoreQuery()).compareTo(other.isSetAppStoreQuery());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppStoreQuery()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appStoreQuery, other.appStoreQuery);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppName()).compareTo(other.isSetAppName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appName, other.appName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppDescription()).compareTo(other.isSetAppDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appDescription, other.appDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppOpenURLPattern()).compareTo(other.isSetAppOpenURLPattern());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppOpenURLPattern()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appOpenURLPattern, other.appOpenURLPattern);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppLogoURL()).compareTo(other.isSetAppLogoURL());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppLogoURL()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appLogoURL, other.appLogoURL);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("RecommendedApp(");
    boolean first = true;

    sb.append("appStoreQuery:");
    if (this.appStoreQuery == null) {
      sb.append("null");
    } else {
      sb.append(this.appStoreQuery);
    }
    first = false;
    if (isSetAppName()) {
      if (!first) sb.append(", ");
      sb.append("appName:");
      if (this.appName == null) {
        sb.append("null");
      } else {
        sb.append(this.appName);
      }
      first = false;
    }
    if (isSetAppDescription()) {
      if (!first) sb.append(", ");
      sb.append("appDescription:");
      if (this.appDescription == null) {
        sb.append("null");
      } else {
        sb.append(this.appDescription);
      }
      first = false;
    }
    if (isSetAppOpenURLPattern()) {
      if (!first) sb.append(", ");
      sb.append("appOpenURLPattern:");
      if (this.appOpenURLPattern == null) {
        sb.append("null");
      } else {
        sb.append(this.appOpenURLPattern);
      }
      first = false;
    }
    if (isSetAppLogoURL()) {
      if (!first) sb.append(", ");
      sb.append("appLogoURL:");
      if (this.appLogoURL == null) {
        sb.append("null");
      } else {
        sb.append(this.appLogoURL);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (appStoreQuery == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'appStoreQuery' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RecommendedAppStandardSchemeFactory implements SchemeFactory {
    public RecommendedAppStandardScheme getScheme() {
      return new RecommendedAppStandardScheme();
    }
  }

  private static class RecommendedAppStandardScheme extends StandardScheme<RecommendedApp> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RecommendedApp struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // APP_STORE_QUERY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appStoreQuery = iprot.readString();
              struct.setAppStoreQueryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appName = iprot.readString();
              struct.setAppNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APP_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appDescription = iprot.readString();
              struct.setAppDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // APP_OPEN_URLPATTERN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appOpenURLPattern = iprot.readString();
              struct.setAppOpenURLPatternIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // APP_LOGO_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appLogoURL = iprot.readString();
              struct.setAppLogoURLIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RecommendedApp struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.appStoreQuery != null) {
        oprot.writeFieldBegin(APP_STORE_QUERY_FIELD_DESC);
        oprot.writeString(struct.appStoreQuery);
        oprot.writeFieldEnd();
      }
      if (struct.appName != null) {
        if (struct.isSetAppName()) {
          oprot.writeFieldBegin(APP_NAME_FIELD_DESC);
          oprot.writeString(struct.appName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appDescription != null) {
        if (struct.isSetAppDescription()) {
          oprot.writeFieldBegin(APP_DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.appDescription);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appOpenURLPattern != null) {
        if (struct.isSetAppOpenURLPattern()) {
          oprot.writeFieldBegin(APP_OPEN_URLPATTERN_FIELD_DESC);
          oprot.writeString(struct.appOpenURLPattern);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appLogoURL != null) {
        if (struct.isSetAppLogoURL()) {
          oprot.writeFieldBegin(APP_LOGO_URL_FIELD_DESC);
          oprot.writeString(struct.appLogoURL);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RecommendedAppTupleSchemeFactory implements SchemeFactory {
    public RecommendedAppTupleScheme getScheme() {
      return new RecommendedAppTupleScheme();
    }
  }

  private static class RecommendedAppTupleScheme extends TupleScheme<RecommendedApp> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RecommendedApp struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.appStoreQuery);
      BitSet optionals = new BitSet();
      if (struct.isSetAppName()) {
        optionals.set(0);
      }
      if (struct.isSetAppDescription()) {
        optionals.set(1);
      }
      if (struct.isSetAppOpenURLPattern()) {
        optionals.set(2);
      }
      if (struct.isSetAppLogoURL()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetAppName()) {
        oprot.writeString(struct.appName);
      }
      if (struct.isSetAppDescription()) {
        oprot.writeString(struct.appDescription);
      }
      if (struct.isSetAppOpenURLPattern()) {
        oprot.writeString(struct.appOpenURLPattern);
      }
      if (struct.isSetAppLogoURL()) {
        oprot.writeString(struct.appLogoURL);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RecommendedApp struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.appStoreQuery = iprot.readString();
      struct.setAppStoreQueryIsSet(true);
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.appName = iprot.readString();
        struct.setAppNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.appDescription = iprot.readString();
        struct.setAppDescriptionIsSet(true);
      }
      if (incoming.get(2)) {
        struct.appOpenURLPattern = iprot.readString();
        struct.setAppOpenURLPatternIsSet(true);
      }
      if (incoming.get(3)) {
        struct.appLogoURL = iprot.readString();
        struct.setAppLogoURLIsSet(true);
      }
    }
  }

}

