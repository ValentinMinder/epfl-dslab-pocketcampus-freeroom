/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.pocketcampus.plugin.recommendedapps.shared;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class RecommendedApp implements org.apache.thrift.TBase<RecommendedApp, RecommendedApp._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecommendedApp");

  private static final org.apache.thrift.protocol.TField APP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField APP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("appName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APP_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("appDescription", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField APP_OSCONFIGURATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("appOSConfigurations", org.apache.thrift.protocol.TType.MAP, (short)4);

  private int appId; // required
  private String appName; // required
  private String appDescription; // required
  private Map<AppStore,RecommendedAppOSConfiguration> appOSConfigurations; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    APP_ID((short)1, "appId"),
    APP_NAME((short)2, "appName"),
    APP_DESCRIPTION((short)3, "appDescription"),
    APP_OSCONFIGURATIONS((short)4, "appOSConfigurations");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // APP_ID
          return APP_ID;
        case 2: // APP_NAME
          return APP_NAME;
        case 3: // APP_DESCRIPTION
          return APP_DESCRIPTION;
        case 4: // APP_OSCONFIGURATIONS
          return APP_OSCONFIGURATIONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __APPID_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APP_ID, new org.apache.thrift.meta_data.FieldMetaData("appId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APP_NAME, new org.apache.thrift.meta_data.FieldMetaData("appName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("appDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_OSCONFIGURATIONS, new org.apache.thrift.meta_data.FieldMetaData("appOSConfigurations", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, AppStore.class), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RecommendedAppOSConfiguration.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RecommendedApp.class, metaDataMap);
  }

  public RecommendedApp() {
  }

  public RecommendedApp(
    int appId,
    String appName,
    String appDescription,
    Map<AppStore,RecommendedAppOSConfiguration> appOSConfigurations)
  {
    this();
    this.appId = appId;
    setAppIdIsSet(true);
    this.appName = appName;
    this.appDescription = appDescription;
    this.appOSConfigurations = appOSConfigurations;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RecommendedApp(RecommendedApp other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.appId = other.appId;
    if (other.isSetAppName()) {
      this.appName = other.appName;
    }
    if (other.isSetAppDescription()) {
      this.appDescription = other.appDescription;
    }
    if (other.isSetAppOSConfigurations()) {
      Map<AppStore,RecommendedAppOSConfiguration> __this__appOSConfigurations = new HashMap<AppStore,RecommendedAppOSConfiguration>();
      for (Map.Entry<AppStore, RecommendedAppOSConfiguration> other_element : other.appOSConfigurations.entrySet()) {

        AppStore other_element_key = other_element.getKey();
        RecommendedAppOSConfiguration other_element_value = other_element.getValue();

        AppStore __this__appOSConfigurations_copy_key = other_element_key;

        RecommendedAppOSConfiguration __this__appOSConfigurations_copy_value = new RecommendedAppOSConfiguration(other_element_value);

        __this__appOSConfigurations.put(__this__appOSConfigurations_copy_key, __this__appOSConfigurations_copy_value);
      }
      this.appOSConfigurations = __this__appOSConfigurations;
    }
  }

  public RecommendedApp deepCopy() {
    return new RecommendedApp(this);
  }

  @Override
  public void clear() {
    setAppIdIsSet(false);
    this.appId = 0;
    this.appName = null;
    this.appDescription = null;
    this.appOSConfigurations = null;
  }

  public int getAppId() {
    return this.appId;
  }

  public RecommendedApp setAppId(int appId) {
    this.appId = appId;
    setAppIdIsSet(true);
    return this;
  }

  public void unsetAppId() {
    __isset_bit_vector.clear(__APPID_ISSET_ID);
  }

  /** Returns true if field appId is set (has been assigned a value) and false otherwise */
  public boolean isSetAppId() {
    return __isset_bit_vector.get(__APPID_ISSET_ID);
  }

  public void setAppIdIsSet(boolean value) {
    __isset_bit_vector.set(__APPID_ISSET_ID, value);
  }

  public String getAppName() {
    return this.appName;
  }

  public RecommendedApp setAppName(String appName) {
    this.appName = appName;
    return this;
  }

  public void unsetAppName() {
    this.appName = null;
  }

  /** Returns true if field appName is set (has been assigned a value) and false otherwise */
  public boolean isSetAppName() {
    return this.appName != null;
  }

  public void setAppNameIsSet(boolean value) {
    if (!value) {
      this.appName = null;
    }
  }

  public String getAppDescription() {
    return this.appDescription;
  }

  public RecommendedApp setAppDescription(String appDescription) {
    this.appDescription = appDescription;
    return this;
  }

  public void unsetAppDescription() {
    this.appDescription = null;
  }

  /** Returns true if field appDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetAppDescription() {
    return this.appDescription != null;
  }

  public void setAppDescriptionIsSet(boolean value) {
    if (!value) {
      this.appDescription = null;
    }
  }

  public int getAppOSConfigurationsSize() {
    return (this.appOSConfigurations == null) ? 0 : this.appOSConfigurations.size();
  }

  public void putToAppOSConfigurations(AppStore key, RecommendedAppOSConfiguration val) {
    if (this.appOSConfigurations == null) {
      this.appOSConfigurations = new HashMap<AppStore,RecommendedAppOSConfiguration>();
    }
    this.appOSConfigurations.put(key, val);
  }

  public Map<AppStore,RecommendedAppOSConfiguration> getAppOSConfigurations() {
    return this.appOSConfigurations;
  }

  public RecommendedApp setAppOSConfigurations(Map<AppStore,RecommendedAppOSConfiguration> appOSConfigurations) {
    this.appOSConfigurations = appOSConfigurations;
    return this;
  }

  public void unsetAppOSConfigurations() {
    this.appOSConfigurations = null;
  }

  /** Returns true if field appOSConfigurations is set (has been assigned a value) and false otherwise */
  public boolean isSetAppOSConfigurations() {
    return this.appOSConfigurations != null;
  }

  public void setAppOSConfigurationsIsSet(boolean value) {
    if (!value) {
      this.appOSConfigurations = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case APP_ID:
      if (value == null) {
        unsetAppId();
      } else {
        setAppId((Integer)value);
      }
      break;

    case APP_NAME:
      if (value == null) {
        unsetAppName();
      } else {
        setAppName((String)value);
      }
      break;

    case APP_DESCRIPTION:
      if (value == null) {
        unsetAppDescription();
      } else {
        setAppDescription((String)value);
      }
      break;

    case APP_OSCONFIGURATIONS:
      if (value == null) {
        unsetAppOSConfigurations();
      } else {
        setAppOSConfigurations((Map<AppStore,RecommendedAppOSConfiguration>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case APP_ID:
      return Integer.valueOf(getAppId());

    case APP_NAME:
      return getAppName();

    case APP_DESCRIPTION:
      return getAppDescription();

    case APP_OSCONFIGURATIONS:
      return getAppOSConfigurations();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case APP_ID:
      return isSetAppId();
    case APP_NAME:
      return isSetAppName();
    case APP_DESCRIPTION:
      return isSetAppDescription();
    case APP_OSCONFIGURATIONS:
      return isSetAppOSConfigurations();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof RecommendedApp)
      return this.equals((RecommendedApp)that);
    return false;
  }

  public boolean equals(RecommendedApp that) {
    if (that == null)
      return false;

    boolean this_present_appId = true;
    boolean that_present_appId = true;
    if (this_present_appId || that_present_appId) {
      if (!(this_present_appId && that_present_appId))
        return false;
      if (this.appId != that.appId)
        return false;
    }

    boolean this_present_appName = true && this.isSetAppName();
    boolean that_present_appName = true && that.isSetAppName();
    if (this_present_appName || that_present_appName) {
      if (!(this_present_appName && that_present_appName))
        return false;
      if (!this.appName.equals(that.appName))
        return false;
    }

    boolean this_present_appDescription = true && this.isSetAppDescription();
    boolean that_present_appDescription = true && that.isSetAppDescription();
    if (this_present_appDescription || that_present_appDescription) {
      if (!(this_present_appDescription && that_present_appDescription))
        return false;
      if (!this.appDescription.equals(that.appDescription))
        return false;
    }

    boolean this_present_appOSConfigurations = true && this.isSetAppOSConfigurations();
    boolean that_present_appOSConfigurations = true && that.isSetAppOSConfigurations();
    if (this_present_appOSConfigurations || that_present_appOSConfigurations) {
      if (!(this_present_appOSConfigurations && that_present_appOSConfigurations))
        return false;
      if (!this.appOSConfigurations.equals(that.appOSConfigurations))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_appId = true;
    builder.append(present_appId);
    if (present_appId)
      builder.append(appId);

    boolean present_appName = true && (isSetAppName());
    builder.append(present_appName);
    if (present_appName)
      builder.append(appName);

    boolean present_appDescription = true && (isSetAppDescription());
    builder.append(present_appDescription);
    if (present_appDescription)
      builder.append(appDescription);

    boolean present_appOSConfigurations = true && (isSetAppOSConfigurations());
    builder.append(present_appOSConfigurations);
    if (present_appOSConfigurations)
      builder.append(appOSConfigurations);

    return builder.toHashCode();
  }

  public int compareTo(RecommendedApp other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    RecommendedApp typedOther = (RecommendedApp)other;

    lastComparison = Boolean.valueOf(isSetAppId()).compareTo(typedOther.isSetAppId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appId, typedOther.appId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppName()).compareTo(typedOther.isSetAppName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appName, typedOther.appName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppDescription()).compareTo(typedOther.isSetAppDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appDescription, typedOther.appDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppOSConfigurations()).compareTo(typedOther.isSetAppOSConfigurations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppOSConfigurations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appOSConfigurations, typedOther.appOSConfigurations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    org.apache.thrift.protocol.TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == org.apache.thrift.protocol.TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // APP_ID
          if (field.type == org.apache.thrift.protocol.TType.I32) {
            this.appId = iprot.readI32();
            setAppIdIsSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // APP_NAME
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.appName = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // APP_DESCRIPTION
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.appDescription = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // APP_OSCONFIGURATIONS
          if (field.type == org.apache.thrift.protocol.TType.MAP) {
            {
              org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
              this.appOSConfigurations = new HashMap<AppStore,RecommendedAppOSConfiguration>(2*_map0.size);
              for (int _i1 = 0; _i1 < _map0.size; ++_i1)
              {
                AppStore _key2; // required
                RecommendedAppOSConfiguration _val3; // required
                _key2 = AppStore.findByValue(iprot.readI32());
                _val3 = new RecommendedAppOSConfiguration();
                _val3.read(iprot);
                this.appOSConfigurations.put(_key2, _val3);
              }
              iprot.readMapEnd();
            }
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(APP_ID_FIELD_DESC);
    oprot.writeI32(this.appId);
    oprot.writeFieldEnd();
    if (this.appName != null) {
      oprot.writeFieldBegin(APP_NAME_FIELD_DESC);
      oprot.writeString(this.appName);
      oprot.writeFieldEnd();
    }
    if (this.appDescription != null) {
      oprot.writeFieldBegin(APP_DESCRIPTION_FIELD_DESC);
      oprot.writeString(this.appDescription);
      oprot.writeFieldEnd();
    }
    if (this.appOSConfigurations != null) {
      oprot.writeFieldBegin(APP_OSCONFIGURATIONS_FIELD_DESC);
      {
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, this.appOSConfigurations.size()));
        for (Map.Entry<AppStore, RecommendedAppOSConfiguration> _iter4 : this.appOSConfigurations.entrySet())
        {
          oprot.writeI32(_iter4.getKey().getValue());
          _iter4.getValue().write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("RecommendedApp(");
    boolean first = true;

    sb.append("appId:");
    sb.append(this.appId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("appName:");
    if (this.appName == null) {
      sb.append("null");
    } else {
      sb.append(this.appName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appDescription:");
    if (this.appDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.appDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appOSConfigurations:");
    if (this.appOSConfigurations == null) {
      sb.append("null");
    } else {
      sb.append(this.appOSConfigurations);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

}

