/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.pocketcampus.plugin.food.shared;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum MealType implements org.apache.thrift.TEnum {
  UNKNOWN(1),
  FISH(2),
  MEAT(3),
  POULTRY(4),
  VEGETARIAN(5),
  GREEN_FORK(6),
  PASTA(7),
  PIZZA(8),
  THAI(9),
  INDIAN(10),
  LEBANESE(11);

  private final int value;

  private MealType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static MealType findByValue(int value) { 
    switch (value) {
      case 1:
        return UNKNOWN;
      case 2:
        return FISH;
      case 3:
        return MEAT;
      case 4:
        return POULTRY;
      case 5:
        return VEGETARIAN;
      case 6:
        return GREEN_FORK;
      case 7:
        return PASTA;
      case 8:
        return PIZZA;
      case 9:
        return THAI;
      case 10:
        return INDIAN;
      case 11:
        return LEBANESE;
      default:
        return null;
    }
  }
}
