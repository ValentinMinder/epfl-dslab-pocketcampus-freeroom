/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.pocketcampus.plugin.isacademia.shared;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ScheduleRequest implements org.apache.thrift.TBase<ScheduleRequest, ScheduleRequest._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ScheduleRequest");

  private static final org.apache.thrift.protocol.TField TEQUILA_COOKIE_FIELD_DESC = new org.apache.thrift.protocol.TField("tequilaCookie", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField WEEK_START_FIELD_DESC = new org.apache.thrift.protocol.TField("weekStart", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)3);

  private String tequilaCookie; // required
  private long weekStart; // required
  private String language; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TEQUILA_COOKIE((short)1, "tequilaCookie"),
    WEEK_START((short)2, "weekStart"),
    LANGUAGE((short)3, "language");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TEQUILA_COOKIE
          return TEQUILA_COOKIE;
        case 2: // WEEK_START
          return WEEK_START;
        case 3: // LANGUAGE
          return LANGUAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __WEEKSTART_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TEQUILA_COOKIE, new org.apache.thrift.meta_data.FieldMetaData("tequilaCookie", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEEK_START, new org.apache.thrift.meta_data.FieldMetaData("weekStart", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "timestamp")));
    tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ScheduleRequest.class, metaDataMap);
  }

  public ScheduleRequest() {
  }

  public ScheduleRequest(
    String tequilaCookie)
  {
    this();
    this.tequilaCookie = tequilaCookie;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ScheduleRequest(ScheduleRequest other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetTequilaCookie()) {
      this.tequilaCookie = other.tequilaCookie;
    }
    this.weekStart = other.weekStart;
    if (other.isSetLanguage()) {
      this.language = other.language;
    }
  }

  public ScheduleRequest deepCopy() {
    return new ScheduleRequest(this);
  }

  @Override
  public void clear() {
    this.tequilaCookie = null;
    setWeekStartIsSet(false);
    this.weekStart = 0;
    this.language = null;
  }

  public String getTequilaCookie() {
    return this.tequilaCookie;
  }

  public ScheduleRequest setTequilaCookie(String tequilaCookie) {
    this.tequilaCookie = tequilaCookie;
    return this;
  }

  public void unsetTequilaCookie() {
    this.tequilaCookie = null;
  }

  /** Returns true if field tequilaCookie is set (has been assigned a value) and false otherwise */
  public boolean isSetTequilaCookie() {
    return this.tequilaCookie != null;
  }

  public void setTequilaCookieIsSet(boolean value) {
    if (!value) {
      this.tequilaCookie = null;
    }
  }

  public long getWeekStart() {
    return this.weekStart;
  }

  public ScheduleRequest setWeekStart(long weekStart) {
    this.weekStart = weekStart;
    setWeekStartIsSet(true);
    return this;
  }

  public void unsetWeekStart() {
    __isset_bit_vector.clear(__WEEKSTART_ISSET_ID);
  }

  /** Returns true if field weekStart is set (has been assigned a value) and false otherwise */
  public boolean isSetWeekStart() {
    return __isset_bit_vector.get(__WEEKSTART_ISSET_ID);
  }

  public void setWeekStartIsSet(boolean value) {
    __isset_bit_vector.set(__WEEKSTART_ISSET_ID, value);
  }

  public String getLanguage() {
    return this.language;
  }

  public ScheduleRequest setLanguage(String language) {
    this.language = language;
    return this;
  }

  public void unsetLanguage() {
    this.language = null;
  }

  /** Returns true if field language is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguage() {
    return this.language != null;
  }

  public void setLanguageIsSet(boolean value) {
    if (!value) {
      this.language = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TEQUILA_COOKIE:
      if (value == null) {
        unsetTequilaCookie();
      } else {
        setTequilaCookie((String)value);
      }
      break;

    case WEEK_START:
      if (value == null) {
        unsetWeekStart();
      } else {
        setWeekStart((Long)value);
      }
      break;

    case LANGUAGE:
      if (value == null) {
        unsetLanguage();
      } else {
        setLanguage((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TEQUILA_COOKIE:
      return getTequilaCookie();

    case WEEK_START:
      return Long.valueOf(getWeekStart());

    case LANGUAGE:
      return getLanguage();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TEQUILA_COOKIE:
      return isSetTequilaCookie();
    case WEEK_START:
      return isSetWeekStart();
    case LANGUAGE:
      return isSetLanguage();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ScheduleRequest)
      return this.equals((ScheduleRequest)that);
    return false;
  }

  public boolean equals(ScheduleRequest that) {
    if (that == null)
      return false;

    boolean this_present_tequilaCookie = true && this.isSetTequilaCookie();
    boolean that_present_tequilaCookie = true && that.isSetTequilaCookie();
    if (this_present_tequilaCookie || that_present_tequilaCookie) {
      if (!(this_present_tequilaCookie && that_present_tequilaCookie))
        return false;
      if (!this.tequilaCookie.equals(that.tequilaCookie))
        return false;
    }

    boolean this_present_weekStart = true && this.isSetWeekStart();
    boolean that_present_weekStart = true && that.isSetWeekStart();
    if (this_present_weekStart || that_present_weekStart) {
      if (!(this_present_weekStart && that_present_weekStart))
        return false;
      if (this.weekStart != that.weekStart)
        return false;
    }

    boolean this_present_language = true && this.isSetLanguage();
    boolean that_present_language = true && that.isSetLanguage();
    if (this_present_language || that_present_language) {
      if (!(this_present_language && that_present_language))
        return false;
      if (!this.language.equals(that.language))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_tequilaCookie = true && (isSetTequilaCookie());
    builder.append(present_tequilaCookie);
    if (present_tequilaCookie)
      builder.append(tequilaCookie);

    boolean present_weekStart = true && (isSetWeekStart());
    builder.append(present_weekStart);
    if (present_weekStart)
      builder.append(weekStart);

    boolean present_language = true && (isSetLanguage());
    builder.append(present_language);
    if (present_language)
      builder.append(language);

    return builder.toHashCode();
  }

  public int compareTo(ScheduleRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    ScheduleRequest typedOther = (ScheduleRequest)other;

    lastComparison = Boolean.valueOf(isSetTequilaCookie()).compareTo(typedOther.isSetTequilaCookie());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTequilaCookie()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tequilaCookie, typedOther.tequilaCookie);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeekStart()).compareTo(typedOther.isSetWeekStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeekStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weekStart, typedOther.weekStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguage()).compareTo(typedOther.isSetLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, typedOther.language);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    org.apache.thrift.protocol.TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == org.apache.thrift.protocol.TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // TEQUILA_COOKIE
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.tequilaCookie = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // WEEK_START
          if (field.type == org.apache.thrift.protocol.TType.I64) {
            this.weekStart = iprot.readI64();
            setWeekStartIsSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // LANGUAGE
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.language = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.tequilaCookie != null) {
      oprot.writeFieldBegin(TEQUILA_COOKIE_FIELD_DESC);
      oprot.writeString(this.tequilaCookie);
      oprot.writeFieldEnd();
    }
    if (isSetWeekStart()) {
      oprot.writeFieldBegin(WEEK_START_FIELD_DESC);
      oprot.writeI64(this.weekStart);
      oprot.writeFieldEnd();
    }
    if (this.language != null) {
      if (isSetLanguage()) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(this.language);
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ScheduleRequest(");
    boolean first = true;

    sb.append("tequilaCookie:");
    if (this.tequilaCookie == null) {
      sb.append("null");
    } else {
      sb.append(this.tequilaCookie);
    }
    first = false;
    if (isSetWeekStart()) {
      if (!first) sb.append(", ");
      sb.append("weekStart:");
      sb.append(this.weekStart);
      first = false;
    }
    if (isSetLanguage()) {
      if (!first) sb.append(", ");
      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (tequilaCookie == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'tequilaCookie' was not present! Struct: " + toString());
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

}

