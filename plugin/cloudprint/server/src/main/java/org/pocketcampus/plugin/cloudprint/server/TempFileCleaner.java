package org.pocketcampus.plugin.cloudprint.server;

import org.pocketcampus.platform.server.launcher.PocketCampusServer;

import java.io.IOException;

public class TempFileCleaner {


	private static final long OLD_FILE_CLEAN_PERIOD = 1l; // in minutes
	
	
	public static final Runnable oldFileCleaner = new Runnable() {
		public synchronized void run() {
			String cupsPdfOutDir = PocketCampusServer.CONFIG.getString("CLOUDPRINT_CUPSPDF_OUTDIR");
			String cloudPrintDumpDir = PocketCampusServer.CONFIG.getString("CLOUDPRINT_DUMP_DIRECTORY");
			try {
				// delete all MultiPart* files in /tmp/ that are more than 60 minutes old; these files are created by Jetty to temporarily store uploaded files
				Runtime.getRuntime().exec(new String[]{"find", "/tmp/", "-maxdepth", "1", "-name", "MultiPart*", "-cmin", "+60", "-delete"}).waitFor();
				// delete all PDFs in /tmp/CloudPrintPDF/ that are more than 60 minutes old; these are generated by cups-pdf for print preview
				Runtime.getRuntime().exec(new String[]{"find", cupsPdfOutDir, "-type", "f", "-cmin", "+60", "-delete"}).waitFor();
				
				// delete all files in cloudprint_files/ that are more than 60 minutes old
				Runtime.getRuntime().exec(new String[]{"find", cloudPrintDumpDir, "-type", "f", "-cmin", "+60", "-delete"}).waitFor();
				// delete all empty directories in cloudprint_files/
				Runtime.getRuntime().exec(new String[]{"find", cloudPrintDumpDir, "-mindepth", "1", "-type", "d", "-empty", "-delete"}).waitFor();
			} catch (IOException e) {
				e.printStackTrace();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	};
	private static long lastCleaned = getCurrentTimeDivision(OLD_FILE_CLEAN_PERIOD);
	public static synchronized void cleanupIfNeeded() {
		long currCleaningSlot = getCurrentTimeDivision(OLD_FILE_CLEAN_PERIOD);
		if(currCleaningSlot != lastCleaned) {
			lastCleaned = currCleaningSlot;
			new Thread(oldFileCleaner).start();
		}
	}
	private static long getCurrentTimeDivision(long periodInMinutes) {
		return System.currentTimeMillis() / 1000l / 60l / periodInMinutes;
	}

}
