/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.pocketcampus.plugin.myedu.shared;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MyEduSubmitFeedbackReply implements org.apache.thrift.TBase<MyEduSubmitFeedbackReply, MyEduSubmitFeedbackReply._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MyEduSubmitFeedbackReply");

  private static final org.apache.thrift.protocol.TField I_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("iSuccess", org.apache.thrift.protocol.TType.BOOL, (short)1);
  private static final org.apache.thrift.protocol.TField I_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("iMessage", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField I_MY_EDU_MODULE_RECORD_FIELD_DESC = new org.apache.thrift.protocol.TField("iMyEduModuleRecord", org.apache.thrift.protocol.TType.STRUCT, (short)3);

  public boolean iSuccess; // required
  public String iMessage; // required
  public MyEduModuleRecord iMyEduModuleRecord; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    I_SUCCESS((short)1, "iSuccess"),
    I_MESSAGE((short)2, "iMessage"),
    I_MY_EDU_MODULE_RECORD((short)3, "iMyEduModuleRecord");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // I_SUCCESS
          return I_SUCCESS;
        case 2: // I_MESSAGE
          return I_MESSAGE;
        case 3: // I_MY_EDU_MODULE_RECORD
          return I_MY_EDU_MODULE_RECORD;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ISUCCESS_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.I_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("iSuccess", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.I_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("iMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.I_MY_EDU_MODULE_RECORD, new org.apache.thrift.meta_data.FieldMetaData("iMyEduModuleRecord", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MyEduModuleRecord.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MyEduSubmitFeedbackReply.class, metaDataMap);
  }

  public MyEduSubmitFeedbackReply() {
  }

  public MyEduSubmitFeedbackReply(
    boolean iSuccess,
    String iMessage)
  {
    this();
    this.iSuccess = iSuccess;
    setISuccessIsSet(true);
    this.iMessage = iMessage;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MyEduSubmitFeedbackReply(MyEduSubmitFeedbackReply other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.iSuccess = other.iSuccess;
    if (other.isSetIMessage()) {
      this.iMessage = other.iMessage;
    }
    if (other.isSetIMyEduModuleRecord()) {
      this.iMyEduModuleRecord = new MyEduModuleRecord(other.iMyEduModuleRecord);
    }
  }

  public MyEduSubmitFeedbackReply deepCopy() {
    return new MyEduSubmitFeedbackReply(this);
  }

  @Override
  public void clear() {
    setISuccessIsSet(false);
    this.iSuccess = false;
    this.iMessage = null;
    this.iMyEduModuleRecord = null;
  }

  public boolean isISuccess() {
    return this.iSuccess;
  }

  public MyEduSubmitFeedbackReply setISuccess(boolean iSuccess) {
    this.iSuccess = iSuccess;
    setISuccessIsSet(true);
    return this;
  }

  public void unsetISuccess() {
    __isset_bit_vector.clear(__ISUCCESS_ISSET_ID);
  }

  /** Returns true if field iSuccess is set (has been assigned a value) and false otherwise */
  public boolean isSetISuccess() {
    return __isset_bit_vector.get(__ISUCCESS_ISSET_ID);
  }

  public void setISuccessIsSet(boolean value) {
    __isset_bit_vector.set(__ISUCCESS_ISSET_ID, value);
  }

  public String getIMessage() {
    return this.iMessage;
  }

  public MyEduSubmitFeedbackReply setIMessage(String iMessage) {
    this.iMessage = iMessage;
    return this;
  }

  public void unsetIMessage() {
    this.iMessage = null;
  }

  /** Returns true if field iMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetIMessage() {
    return this.iMessage != null;
  }

  public void setIMessageIsSet(boolean value) {
    if (!value) {
      this.iMessage = null;
    }
  }

  public MyEduModuleRecord getIMyEduModuleRecord() {
    return this.iMyEduModuleRecord;
  }

  public MyEduSubmitFeedbackReply setIMyEduModuleRecord(MyEduModuleRecord iMyEduModuleRecord) {
    this.iMyEduModuleRecord = iMyEduModuleRecord;
    return this;
  }

  public void unsetIMyEduModuleRecord() {
    this.iMyEduModuleRecord = null;
  }

  /** Returns true if field iMyEduModuleRecord is set (has been assigned a value) and false otherwise */
  public boolean isSetIMyEduModuleRecord() {
    return this.iMyEduModuleRecord != null;
  }

  public void setIMyEduModuleRecordIsSet(boolean value) {
    if (!value) {
      this.iMyEduModuleRecord = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case I_SUCCESS:
      if (value == null) {
        unsetISuccess();
      } else {
        setISuccess((Boolean)value);
      }
      break;

    case I_MESSAGE:
      if (value == null) {
        unsetIMessage();
      } else {
        setIMessage((String)value);
      }
      break;

    case I_MY_EDU_MODULE_RECORD:
      if (value == null) {
        unsetIMyEduModuleRecord();
      } else {
        setIMyEduModuleRecord((MyEduModuleRecord)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case I_SUCCESS:
      return Boolean.valueOf(isISuccess());

    case I_MESSAGE:
      return getIMessage();

    case I_MY_EDU_MODULE_RECORD:
      return getIMyEduModuleRecord();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case I_SUCCESS:
      return isSetISuccess();
    case I_MESSAGE:
      return isSetIMessage();
    case I_MY_EDU_MODULE_RECORD:
      return isSetIMyEduModuleRecord();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MyEduSubmitFeedbackReply)
      return this.equals((MyEduSubmitFeedbackReply)that);
    return false;
  }

  public boolean equals(MyEduSubmitFeedbackReply that) {
    if (that == null)
      return false;

    boolean this_present_iSuccess = true;
    boolean that_present_iSuccess = true;
    if (this_present_iSuccess || that_present_iSuccess) {
      if (!(this_present_iSuccess && that_present_iSuccess))
        return false;
      if (this.iSuccess != that.iSuccess)
        return false;
    }

    boolean this_present_iMessage = true && this.isSetIMessage();
    boolean that_present_iMessage = true && that.isSetIMessage();
    if (this_present_iMessage || that_present_iMessage) {
      if (!(this_present_iMessage && that_present_iMessage))
        return false;
      if (!this.iMessage.equals(that.iMessage))
        return false;
    }

    boolean this_present_iMyEduModuleRecord = true && this.isSetIMyEduModuleRecord();
    boolean that_present_iMyEduModuleRecord = true && that.isSetIMyEduModuleRecord();
    if (this_present_iMyEduModuleRecord || that_present_iMyEduModuleRecord) {
      if (!(this_present_iMyEduModuleRecord && that_present_iMyEduModuleRecord))
        return false;
      if (!this.iMyEduModuleRecord.equals(that.iMyEduModuleRecord))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_iSuccess = true;
    builder.append(present_iSuccess);
    if (present_iSuccess)
      builder.append(iSuccess);

    boolean present_iMessage = true && (isSetIMessage());
    builder.append(present_iMessage);
    if (present_iMessage)
      builder.append(iMessage);

    boolean present_iMyEduModuleRecord = true && (isSetIMyEduModuleRecord());
    builder.append(present_iMyEduModuleRecord);
    if (present_iMyEduModuleRecord)
      builder.append(iMyEduModuleRecord);

    return builder.toHashCode();
  }

  public int compareTo(MyEduSubmitFeedbackReply other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    MyEduSubmitFeedbackReply typedOther = (MyEduSubmitFeedbackReply)other;

    lastComparison = Boolean.valueOf(isSetISuccess()).compareTo(typedOther.isSetISuccess());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetISuccess()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.iSuccess, typedOther.iSuccess);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIMessage()).compareTo(typedOther.isSetIMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.iMessage, typedOther.iMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIMyEduModuleRecord()).compareTo(typedOther.isSetIMyEduModuleRecord());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIMyEduModuleRecord()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.iMyEduModuleRecord, typedOther.iMyEduModuleRecord);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    org.apache.thrift.protocol.TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == org.apache.thrift.protocol.TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // I_SUCCESS
          if (field.type == org.apache.thrift.protocol.TType.BOOL) {
            this.iSuccess = iprot.readBool();
            setISuccessIsSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // I_MESSAGE
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.iMessage = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // I_MY_EDU_MODULE_RECORD
          if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
            this.iMyEduModuleRecord = new MyEduModuleRecord();
            this.iMyEduModuleRecord.read(iprot);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    if (!isSetISuccess()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'iSuccess' was not found in serialized data! Struct: " + toString());
    }
    validate();
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(I_SUCCESS_FIELD_DESC);
    oprot.writeBool(this.iSuccess);
    oprot.writeFieldEnd();
    if (this.iMessage != null) {
      oprot.writeFieldBegin(I_MESSAGE_FIELD_DESC);
      oprot.writeString(this.iMessage);
      oprot.writeFieldEnd();
    }
    if (this.iMyEduModuleRecord != null) {
      if (isSetIMyEduModuleRecord()) {
        oprot.writeFieldBegin(I_MY_EDU_MODULE_RECORD_FIELD_DESC);
        this.iMyEduModuleRecord.write(oprot);
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MyEduSubmitFeedbackReply(");
    boolean first = true;

    sb.append("iSuccess:");
    sb.append(this.iSuccess);
    first = false;
    if (!first) sb.append(", ");
    sb.append("iMessage:");
    if (this.iMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.iMessage);
    }
    first = false;
    if (isSetIMyEduModuleRecord()) {
      if (!first) sb.append(", ");
      sb.append("iMyEduModuleRecord:");
      if (this.iMyEduModuleRecord == null) {
        sb.append("null");
      } else {
        sb.append(this.iMyEduModuleRecord);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'iSuccess' because it's a primitive and you chose the non-beans generator.
    if (iMessage == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'iMessage' was not present! Struct: " + toString());
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

}

